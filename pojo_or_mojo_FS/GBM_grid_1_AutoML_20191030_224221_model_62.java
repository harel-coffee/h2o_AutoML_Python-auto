/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2019-10-30T22:56:05.898+01:00
  3.26.0.8
  
  Standalone prediction code with sample test data for GBMModel named GBM_grid_1_AutoML_20191030_224221_model_62

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:61071/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:61071/3/Models.java/GBM_grid_1_AutoML_20191030_224221_model_62 > GBM_grid_1_AutoML_20191030_224221_model_62.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m GBM_grid_1_AutoML_20191030_224221_model_62.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="GBM_grid_1_AutoML_20191030_224221_model_62", algorithm="gbm")
public class GBM_grid_1_AutoML_20191030_224221_model_62 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 299; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_GBM_grid_1_AutoML_20191030_224221_model_62.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* C_no */ null,
    /* H_no */ null,
    /* N_no */ null,
    /* O_no */ null,
    /* S_no */ null,
    /* Aliphatic_atom_count */ null,
    /* Aliphatic_bond_count */ null,
    /* Aliphatic_ring_count */ null,
    /* Aromatic_atom_count */ null,
    /* Aromatic_bond_count */ null,
    /* Aromatic_ring_count */ null,
    /* Asymmetric_atom_count */ null,
    /* Bond_count */ null,
    /* Carboaromatic_ring_count */ null,
    /* Carbo_ring_count */ null,
    /* Chain_atom_count */ null,
    /* Chiral_center_count */ null,
    /* Cyclomatic_number */ null,
    /* Balaban_index */ null,
    /* Dreiding_energy */ null,
    /* Fused_aliphatic_ring_count */ null,
    /* Fused_aromatic_ring_count */ null,
    /* Fused_ring_count */ null,
    /* Heteroaliphatic_ring_count */ null,
    /* Heteroaromatic_ring_count */ null,
    /* Hetero_ring_count */ null,
    /* Hyper_wiener_index */ null,
    /* Largest_ring_size */ null,
    /* Mass */ null,
    /* Maximal_projection_area */ null,
    /* Maximal_projection_radius */ null,
    /* Length_perpendicular_to_the_max_area */ null,
    /* Minimal_projection_area */ null,
    /* Minimal_projection_radius */ null,
    /* Length_perpendicular_to_the_min_area */ null,
    /* Platt_index */ null,
    /* Randic_index */ null,
    /* Szeged_index */ null,
    /* Refractivity */ null,
    /* Ring_atom_count */ null,
    /* Ring_bond_count */ null,
    /* Ring_count */ null,
    /* Ring_count_of_atom */ null,
    /* Ring_system_count */ null,
    /* Rotatable_bond_count */ null,
    /* Atom_count */ null,
    /* Aliphatic_atom_count.1 */ null,
    /* Aromatic_atom_count.1 */ null,
    /* Bond_count.1 */ null,
    /* Aliphatic_bond_count.1 */ null,
    /* Aromatic_bond_count.1 */ null,
    /* Rotatable_bond_count.1 */ null,
    /* Ring_count.1 */ null,
    /* Aliphatic_ring_count.1 */ null,
    /* Aromatic_ring_count.1 */ null,
    /* Hetero_ring_count.1 */ null,
    /* Heteroaliphatic_ring_count.1 */ null,
    /* Heteroaromatic_ring_count.1 */ null,
    /* Ring_atom_count.1 */ null,
    /* Ring_bond_count.1 */ null,
    /* Chain_atom_count.1 */ null,
    /* Chain_bond_count */ null,
    /* Largest_ring_size.1 */ null,
    /* Atom_count.1 */ null,
    /* Aliphatic_atom_count.2 */ null,
    /* Aromatic_atom_count.2 */ null,
    /* Bond_count.2 */ null,
    /* Aliphatic_bond_count.2 */ null,
    /* Aromatic_bond_count.2 */ null,
    /* Rotatable_bond_count.2 */ null,
    /* Ring_count.2 */ null,
    /* Aliphatic_ring_count.2 */ null,
    /* Aromatic_ring_count.2 */ null,
    /* Hetero_ring_count.2 */ null,
    /* Heteroaliphatic_ring_count.2 */ null,
    /* Heteroaromatic_ring_count.2 */ null,
    /* Ring_atom_count.2 */ null,
    /* Ring_bond_count.2 */ null,
    /* Chain_atom_count.2 */ null,
    /* Chain_bond_count.1 */ null,
    /* Largest_ring_size.2 */ null,
    /* van_der_Waals_volume */ null,
    /* pI */ null,
    /* Quaternary_structure */ null,
    /* PLGA_visc */ null,
    /* PLGA_Mw */ null,
    /* La_to_Gly */ null,
    /* PVA_conc_inner_phase */ null,
    /* PVA_conc_outer_phase */ null,
    /* PVA_Mw */ null,
    /* Inner_phase_volume */ null,
    /* Encaps_rate */ null,
    /* Mean_part_size */ null,
    /* Block_polymer */ null,
    /* PLGA_conc */ null,
    /* PLGA_to_Placticizer */ null,
    /* diss_pH */ null,
    /* diss_add */ null,
    /* diss_add_conc */ null,
    /* Prod_method */ null,
    /* Atom_count.2 */ null,
    /* Aliphatic_atom_count.3 */ null,
    /* Bond_count.3 */ null,
    /* Aliphatic_bond_count.3 */ null,
    /* Rotatable_bond_count.3 */ null,
    /* Ring_count.3 */ null,
    /* Aliphatic_ring_count.3 */ null,
    /* Hetero_ring_count.3 */ null,
    /* Heteroaliphatic_ring_count.3 */ null,
    /* Ring_atom_count.3 */ null,
    /* Ring_bond_count.3 */ null,
    /* Chain_atom_count.3 */ null,
    /* Chain_bond_count.2 */ null,
    /* Smallest_ring_size */ null,
    /* Largest_ring_size.3 */ null,
    /* Mass.1 */ null,
    /* molecular */ null,
    /* a_xx_ */ null,
    /* a_yy_ */ null,
    /* a_zz_ */ null,
    /* a_yy_.1 */ null,
    /* ASA */ null,
    /* ASA+ */ null,
    /* ASA- */ null,
    /* ASA_H */ null,
    /* ASA_P */ null,
    /* Polar_surface_area */ null,
    /* Asymmetric_atom_count.1 */ null,
    /* Bond_count.4 */ null,
    /* Chiral_center_count.1 */ null,
    /* Cyclomatic_number.1 */ null,
    /* Dreiding_energy.1 */ null,
    /* Fragment_count */ null,
    /* Harary_index */ null,
    /* Hyper_wiener_index.1 */ null,
    /* Maximal_projection_area.1 */ null,
    /* Maximal_projection_radius.1 */ null,
    /* Minimal_projection_area.1 */ null,
    /* Minimal_projection_radius.1 */ null,
    /* Van_der_Waals_surface_area__3D_ */ null,
    /* Platt_index.1 */ null,
    /* Randic_index.1 */ null,
    /* Szeged_index.1 */ null,
    /* Wiener_index */ null,
    /* Wiener_polarity */ null,
    /* Stereoisomer_count */ null,
    /* count */ null,
    /* Markush_library_size */ null,
    /* pH_0_logd */ null,
    /* pH_1_logd */ null,
    /* pH_2_logd */ null,
    /* pH_3_logd */ null,
    /* pH_4_logd */ null,
    /* pH_5_logd */ null,
    /* pH_6_logd */ null,
    /* pH_7_logd */ null,
    /* pH_8_logd */ null,
    /* pH_9_logd */ null,
    /* pH_10_logd */ null,
    /* pH_11_logd */ null,
    /* pH_12_logd */ null,
    /* pH_13_logd */ null,
    /* pH_14_logd */ null,
    /* logP */ null,
    /* bpKa1 */ null,
    /* bpKa2 */ null,
    /* acceptorcount */ null,
    /* donorcount */ null,
    /* pH_0_msacc */ null,
    /* pH_1_msacc */ null,
    /* pH_2_msacc */ null,
    /* pH_3_msacc */ null,
    /* pH_4_msacc */ null,
    /* pH_5_msacc */ null,
    /* pH_6_msacc */ null,
    /* pH_7_msacc */ null,
    /* pH_8_msacc */ null,
    /* pH_9_msacc */ null,
    /* pH_10_msacc */ null,
    /* pH_11_msacc */ null,
    /* pH_12_msacc */ null,
    /* pH_13_msacc */ null,
    /* pH_14_msacc */ null,
    /* pH_0_msdon */ null,
    /* pH_1_msdon */ null,
    /* pH_2_msdon */ null,
    /* pH_3_msdon */ null,
    /* pH_4_msdon */ null,
    /* pH_5_msdon */ null,
    /* pH_6_msdon */ null,
    /* pH_7_msdon */ null,
    /* pH_8_msdon */ null,
    /* pH_9_msdon */ null,
    /* pH_10_msdon */ null,
    /* pH_11_msdon */ null,
    /* pH_12_msdon */ null,
    /* pH_13_msdon */ null,
    /* pH_14_msdon */ null,
    /* Atom_count.3 */ null,
    /* Aliphatic_atom_count.4 */ null,
    /* Aromatic_atom_count.3 */ null,
    /* Bond_count.5 */ null,
    /* Aliphatic_bond_count.4 */ null,
    /* Aromatic_bond_count.3 */ null,
    /* Rotatable_bond_count.4 */ null,
    /* Ring_count.4 */ null,
    /* Aliphatic_ring_count.4 */ null,
    /* Hetero_ring_count.4 */ null,
    /* Heteroaliphatic_ring_count.4 */ null,
    /* Ring_atom_count.4 */ null,
    /* Ring_bond_count.4 */ null,
    /* Chain_atom_count.4 */ null,
    /* Chain_bond_count.3 */ null,
    /* Smallest_ring_size.1 */ null,
    /* Largest_ring_size.4 */ null,
    /* Mass.2 */ null,
    /* molecular.1 */ null,
    /* a_xx_.1 */ null,
    /* a_yy_.2 */ null,
    /* a_zz_.1 */ null,
    /* a_yy_.3 */ null,
    /* ASA.1 */ null,
    /* ASA+.1 */ null,
    /* ASA-.1 */ null,
    /* ASA_H.1 */ null,
    /* ASA_P.1 */ null,
    /* Polar_surface_area.1 */ null,
    /* Asymmetric_atom_count.2 */ null,
    /* Bond_count.6 */ null,
    /* Chiral_center_count.2 */ null,
    /* Cyclomatic_number.2 */ null,
    /* Dreiding_energy.2 */ null,
    /* Fragment_count.1 */ null,
    /* Harary_index.1 */ null,
    /* Hyper_wiener_index.2 */ null,
    /* Maximal_projection_area.2 */ null,
    /* Maximal_projection_radius.2 */ null,
    /* Minimal_projection_area.2 */ null,
    /* Minimal_projection_radius.2 */ null,
    /* Van_der_Waals_surface_area__3D_.1 */ null,
    /* Platt_index.2 */ null,
    /* Randic_index.2 */ null,
    /* Szeged_index.2 */ null,
    /* Wiener_index.1 */ null,
    /* Wiener_polarity.1 */ null,
    /* Stereoisomer_count.1 */ null,
    /* count.1 */ null,
    /* Markush_library_size.1 */ null,
    /* pH_0_logd.1 */ null,
    /* pH_1_logd.1 */ null,
    /* pH_2_logd.1 */ null,
    /* pH_3_logd.1 */ null,
    /* pH_4_logd.1 */ null,
    /* pH_5_logd.1 */ null,
    /* pH_6_logd.1 */ null,
    /* pH_7_logd.1 */ null,
    /* pH_8_logd.1 */ null,
    /* pH_9_logd.1 */ null,
    /* pH_10_logd.1 */ null,
    /* pH_11_logd.1 */ null,
    /* pH_12_logd.1 */ null,
    /* pH_13_logd.1 */ null,
    /* pH_14_logd.1 */ null,
    /* logP.1 */ null,
    /* bpKa1.1 */ null,
    /* bpKa2.1 */ null,
    /* acceptorcount.1 */ null,
    /* donorcount.1 */ null,
    /* pH_0_msacc.1 */ null,
    /* pH_1_msacc.1 */ null,
    /* pH_2_msacc.1 */ null,
    /* pH_3_msacc.1 */ null,
    /* pH_4_msacc.1 */ null,
    /* pH_5_msacc.1 */ null,
    /* pH_6_msacc.1 */ null,
    /* pH_7_msacc.1 */ null,
    /* pH_8_msacc.1 */ null,
    /* pH_9_msacc.1 */ null,
    /* pH_10_msacc.1 */ null,
    /* pH_11_msacc.1 */ null,
    /* pH_12_msacc.1 */ null,
    /* pH_13_msacc.1 */ null,
    /* pH_14_msacc.1 */ null,
    /* pH_0_msdon.1 */ null,
    /* pH_1_msdon.1 */ null,
    /* pH_2_msdon.1 */ null,
    /* pH_3_msdon.1 */ null,
    /* pH_4_msdon.1 */ null,
    /* pH_5_msdon.1 */ null,
    /* pH_6_msdon.1 */ null,
    /* pH_7_msdon.1 */ null,
    /* pH_8_msdon.1 */ null,
    /* pH_9_msdon.1 */ null,
    /* pH_10_msdon.1 */ null,
    /* pH_11_msdon.1 */ null,
    /* pH_12_msdon.1 */ null,
    /* pH_13_msdon.1 */ null,
    /* pH_14_msdon.1 */ null,
    /* Time_Days */ null,
    /* Q_perc */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {1.0};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {1.0};

  public GBM_grid_1_AutoML_20191030_224221_model_62() { super(NAMES,DOMAINS,"Q_perc"); }
  public String getUUID() { return Long.toString(7707864948706804784L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_0.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_1.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_2.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_3.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_4.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_5.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_6.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_7.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_8.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_9.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_10.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_11.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_12.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_13.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_14.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_15.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_16.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_17.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_18.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_19.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_20.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_21.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_22.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_23.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_24.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_25.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_26.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_27.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_28.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_29.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_30.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_31.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_32.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_33.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_34.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_35.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_36.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_37.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_38.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_39.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_40.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_41.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_42.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_43.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_44.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_45.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_46.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_47.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_48.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_49.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_50.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_51.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_52.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_53.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_54.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_55.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_56.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_57.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_58.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_59.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_60.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_61.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_62.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_63.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_64.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_65.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_66.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_67.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_68.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_69.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_70.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_71.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_72.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_73.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_74.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_75.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_76.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_77.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_78.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_79.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_80.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_81.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_82.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_83.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_84.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_85.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_86.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_87.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_88.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_89.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_90.score0(data,preds);
    GBM_grid_1_AutoML_20191030_224221_model_62_Forest_91.score0(data,preds);
    preds[0] += 53.15236842105263;
    preds[0] = preds[0];
    return preds;
  }
}
// The class representing training column names
class NamesHolder_GBM_grid_1_AutoML_20191030_224221_model_62 implements java.io.Serializable {
  public static final String[] VALUES = new String[299];
  static {
    NamesHolder_GBM_grid_1_AutoML_20191030_224221_model_62_0.fill(VALUES);
  }
  static final class NamesHolder_GBM_grid_1_AutoML_20191030_224221_model_62_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "C_no";
      sa[1] = "H_no";
      sa[2] = "N_no";
      sa[3] = "O_no";
      sa[4] = "S_no";
      sa[5] = "Aliphatic_atom_count";
      sa[6] = "Aliphatic_bond_count";
      sa[7] = "Aliphatic_ring_count";
      sa[8] = "Aromatic_atom_count";
      sa[9] = "Aromatic_bond_count";
      sa[10] = "Aromatic_ring_count";
      sa[11] = "Asymmetric_atom_count";
      sa[12] = "Bond_count";
      sa[13] = "Carboaromatic_ring_count";
      sa[14] = "Carbo_ring_count";
      sa[15] = "Chain_atom_count";
      sa[16] = "Chiral_center_count";
      sa[17] = "Cyclomatic_number";
      sa[18] = "Balaban_index";
      sa[19] = "Dreiding_energy";
      sa[20] = "Fused_aliphatic_ring_count";
      sa[21] = "Fused_aromatic_ring_count";
      sa[22] = "Fused_ring_count";
      sa[23] = "Heteroaliphatic_ring_count";
      sa[24] = "Heteroaromatic_ring_count";
      sa[25] = "Hetero_ring_count";
      sa[26] = "Hyper_wiener_index";
      sa[27] = "Largest_ring_size";
      sa[28] = "Mass";
      sa[29] = "Maximal_projection_area";
      sa[30] = "Maximal_projection_radius";
      sa[31] = "Length_perpendicular_to_the_max_area";
      sa[32] = "Minimal_projection_area";
      sa[33] = "Minimal_projection_radius";
      sa[34] = "Length_perpendicular_to_the_min_area";
      sa[35] = "Platt_index";
      sa[36] = "Randic_index";
      sa[37] = "Szeged_index";
      sa[38] = "Refractivity";
      sa[39] = "Ring_atom_count";
      sa[40] = "Ring_bond_count";
      sa[41] = "Ring_count";
      sa[42] = "Ring_count_of_atom";
      sa[43] = "Ring_system_count";
      sa[44] = "Rotatable_bond_count";
      sa[45] = "Atom_count";
      sa[46] = "Aliphatic_atom_count.1";
      sa[47] = "Aromatic_atom_count.1";
      sa[48] = "Bond_count.1";
      sa[49] = "Aliphatic_bond_count.1";
      sa[50] = "Aromatic_bond_count.1";
      sa[51] = "Rotatable_bond_count.1";
      sa[52] = "Ring_count.1";
      sa[53] = "Aliphatic_ring_count.1";
      sa[54] = "Aromatic_ring_count.1";
      sa[55] = "Hetero_ring_count.1";
      sa[56] = "Heteroaliphatic_ring_count.1";
      sa[57] = "Heteroaromatic_ring_count.1";
      sa[58] = "Ring_atom_count.1";
      sa[59] = "Ring_bond_count.1";
      sa[60] = "Chain_atom_count.1";
      sa[61] = "Chain_bond_count";
      sa[62] = "Largest_ring_size.1";
      sa[63] = "Atom_count.1";
      sa[64] = "Aliphatic_atom_count.2";
      sa[65] = "Aromatic_atom_count.2";
      sa[66] = "Bond_count.2";
      sa[67] = "Aliphatic_bond_count.2";
      sa[68] = "Aromatic_bond_count.2";
      sa[69] = "Rotatable_bond_count.2";
      sa[70] = "Ring_count.2";
      sa[71] = "Aliphatic_ring_count.2";
      sa[72] = "Aromatic_ring_count.2";
      sa[73] = "Hetero_ring_count.2";
      sa[74] = "Heteroaliphatic_ring_count.2";
      sa[75] = "Heteroaromatic_ring_count.2";
      sa[76] = "Ring_atom_count.2";
      sa[77] = "Ring_bond_count.2";
      sa[78] = "Chain_atom_count.2";
      sa[79] = "Chain_bond_count.1";
      sa[80] = "Largest_ring_size.2";
      sa[81] = "van_der_Waals_volume";
      sa[82] = "pI";
      sa[83] = "Quaternary_structure";
      sa[84] = "PLGA_visc";
      sa[85] = "PLGA_Mw";
      sa[86] = "La_to_Gly";
      sa[87] = "PVA_conc_inner_phase";
      sa[88] = "PVA_conc_outer_phase";
      sa[89] = "PVA_Mw";
      sa[90] = "Inner_phase_volume";
      sa[91] = "Encaps_rate";
      sa[92] = "Mean_part_size";
      sa[93] = "Block_polymer";
      sa[94] = "PLGA_conc";
      sa[95] = "PLGA_to_Placticizer";
      sa[96] = "diss_pH";
      sa[97] = "diss_add";
      sa[98] = "diss_add_conc";
      sa[99] = "Prod_method";
      sa[100] = "Atom_count.2";
      sa[101] = "Aliphatic_atom_count.3";
      sa[102] = "Bond_count.3";
      sa[103] = "Aliphatic_bond_count.3";
      sa[104] = "Rotatable_bond_count.3";
      sa[105] = "Ring_count.3";
      sa[106] = "Aliphatic_ring_count.3";
      sa[107] = "Hetero_ring_count.3";
      sa[108] = "Heteroaliphatic_ring_count.3";
      sa[109] = "Ring_atom_count.3";
      sa[110] = "Ring_bond_count.3";
      sa[111] = "Chain_atom_count.3";
      sa[112] = "Chain_bond_count.2";
      sa[113] = "Smallest_ring_size";
      sa[114] = "Largest_ring_size.3";
      sa[115] = "Mass.1";
      sa[116] = "molecular";
      sa[117] = "a_xx_";
      sa[118] = "a_yy_";
      sa[119] = "a_zz_";
      sa[120] = "a_yy_.1";
      sa[121] = "ASA";
      sa[122] = "ASA+";
      sa[123] = "ASA-";
      sa[124] = "ASA_H";
      sa[125] = "ASA_P";
      sa[126] = "Polar_surface_area";
      sa[127] = "Asymmetric_atom_count.1";
      sa[128] = "Bond_count.4";
      sa[129] = "Chiral_center_count.1";
      sa[130] = "Cyclomatic_number.1";
      sa[131] = "Dreiding_energy.1";
      sa[132] = "Fragment_count";
      sa[133] = "Harary_index";
      sa[134] = "Hyper_wiener_index.1";
      sa[135] = "Maximal_projection_area.1";
      sa[136] = "Maximal_projection_radius.1";
      sa[137] = "Minimal_projection_area.1";
      sa[138] = "Minimal_projection_radius.1";
      sa[139] = "Van_der_Waals_surface_area__3D_";
      sa[140] = "Platt_index.1";
      sa[141] = "Randic_index.1";
      sa[142] = "Szeged_index.1";
      sa[143] = "Wiener_index";
      sa[144] = "Wiener_polarity";
      sa[145] = "Stereoisomer_count";
      sa[146] = "count";
      sa[147] = "Markush_library_size";
      sa[148] = "pH_0_logd";
      sa[149] = "pH_1_logd";
      sa[150] = "pH_2_logd";
      sa[151] = "pH_3_logd";
      sa[152] = "pH_4_logd";
      sa[153] = "pH_5_logd";
      sa[154] = "pH_6_logd";
      sa[155] = "pH_7_logd";
      sa[156] = "pH_8_logd";
      sa[157] = "pH_9_logd";
      sa[158] = "pH_10_logd";
      sa[159] = "pH_11_logd";
      sa[160] = "pH_12_logd";
      sa[161] = "pH_13_logd";
      sa[162] = "pH_14_logd";
      sa[163] = "logP";
      sa[164] = "bpKa1";
      sa[165] = "bpKa2";
      sa[166] = "acceptorcount";
      sa[167] = "donorcount";
      sa[168] = "pH_0_msacc";
      sa[169] = "pH_1_msacc";
      sa[170] = "pH_2_msacc";
      sa[171] = "pH_3_msacc";
      sa[172] = "pH_4_msacc";
      sa[173] = "pH_5_msacc";
      sa[174] = "pH_6_msacc";
      sa[175] = "pH_7_msacc";
      sa[176] = "pH_8_msacc";
      sa[177] = "pH_9_msacc";
      sa[178] = "pH_10_msacc";
      sa[179] = "pH_11_msacc";
      sa[180] = "pH_12_msacc";
      sa[181] = "pH_13_msacc";
      sa[182] = "pH_14_msacc";
      sa[183] = "pH_0_msdon";
      sa[184] = "pH_1_msdon";
      sa[185] = "pH_2_msdon";
      sa[186] = "pH_3_msdon";
      sa[187] = "pH_4_msdon";
      sa[188] = "pH_5_msdon";
      sa[189] = "pH_6_msdon";
      sa[190] = "pH_7_msdon";
      sa[191] = "pH_8_msdon";
      sa[192] = "pH_9_msdon";
      sa[193] = "pH_10_msdon";
      sa[194] = "pH_11_msdon";
      sa[195] = "pH_12_msdon";
      sa[196] = "pH_13_msdon";
      sa[197] = "pH_14_msdon";
      sa[198] = "Atom_count.3";
      sa[199] = "Aliphatic_atom_count.4";
      sa[200] = "Aromatic_atom_count.3";
      sa[201] = "Bond_count.5";
      sa[202] = "Aliphatic_bond_count.4";
      sa[203] = "Aromatic_bond_count.3";
      sa[204] = "Rotatable_bond_count.4";
      sa[205] = "Ring_count.4";
      sa[206] = "Aliphatic_ring_count.4";
      sa[207] = "Hetero_ring_count.4";
      sa[208] = "Heteroaliphatic_ring_count.4";
      sa[209] = "Ring_atom_count.4";
      sa[210] = "Ring_bond_count.4";
      sa[211] = "Chain_atom_count.4";
      sa[212] = "Chain_bond_count.3";
      sa[213] = "Smallest_ring_size.1";
      sa[214] = "Largest_ring_size.4";
      sa[215] = "Mass.2";
      sa[216] = "molecular.1";
      sa[217] = "a_xx_.1";
      sa[218] = "a_yy_.2";
      sa[219] = "a_zz_.1";
      sa[220] = "a_yy_.3";
      sa[221] = "ASA.1";
      sa[222] = "ASA+.1";
      sa[223] = "ASA-.1";
      sa[224] = "ASA_H.1";
      sa[225] = "ASA_P.1";
      sa[226] = "Polar_surface_area.1";
      sa[227] = "Asymmetric_atom_count.2";
      sa[228] = "Bond_count.6";
      sa[229] = "Chiral_center_count.2";
      sa[230] = "Cyclomatic_number.2";
      sa[231] = "Dreiding_energy.2";
      sa[232] = "Fragment_count.1";
      sa[233] = "Harary_index.1";
      sa[234] = "Hyper_wiener_index.2";
      sa[235] = "Maximal_projection_area.2";
      sa[236] = "Maximal_projection_radius.2";
      sa[237] = "Minimal_projection_area.2";
      sa[238] = "Minimal_projection_radius.2";
      sa[239] = "Van_der_Waals_surface_area__3D_.1";
      sa[240] = "Platt_index.2";
      sa[241] = "Randic_index.2";
      sa[242] = "Szeged_index.2";
      sa[243] = "Wiener_index.1";
      sa[244] = "Wiener_polarity.1";
      sa[245] = "Stereoisomer_count.1";
      sa[246] = "count.1";
      sa[247] = "Markush_library_size.1";
      sa[248] = "pH_0_logd.1";
      sa[249] = "pH_1_logd.1";
      sa[250] = "pH_2_logd.1";
      sa[251] = "pH_3_logd.1";
      sa[252] = "pH_4_logd.1";
      sa[253] = "pH_5_logd.1";
      sa[254] = "pH_6_logd.1";
      sa[255] = "pH_7_logd.1";
      sa[256] = "pH_8_logd.1";
      sa[257] = "pH_9_logd.1";
      sa[258] = "pH_10_logd.1";
      sa[259] = "pH_11_logd.1";
      sa[260] = "pH_12_logd.1";
      sa[261] = "pH_13_logd.1";
      sa[262] = "pH_14_logd.1";
      sa[263] = "logP.1";
      sa[264] = "bpKa1.1";
      sa[265] = "bpKa2.1";
      sa[266] = "acceptorcount.1";
      sa[267] = "donorcount.1";
      sa[268] = "pH_0_msacc.1";
      sa[269] = "pH_1_msacc.1";
      sa[270] = "pH_2_msacc.1";
      sa[271] = "pH_3_msacc.1";
      sa[272] = "pH_4_msacc.1";
      sa[273] = "pH_5_msacc.1";
      sa[274] = "pH_6_msacc.1";
      sa[275] = "pH_7_msacc.1";
      sa[276] = "pH_8_msacc.1";
      sa[277] = "pH_9_msacc.1";
      sa[278] = "pH_10_msacc.1";
      sa[279] = "pH_11_msacc.1";
      sa[280] = "pH_12_msacc.1";
      sa[281] = "pH_13_msacc.1";
      sa[282] = "pH_14_msacc.1";
      sa[283] = "pH_0_msdon.1";
      sa[284] = "pH_1_msdon.1";
      sa[285] = "pH_2_msdon.1";
      sa[286] = "pH_3_msdon.1";
      sa[287] = "pH_4_msdon.1";
      sa[288] = "pH_5_msdon.1";
      sa[289] = "pH_6_msdon.1";
      sa[290] = "pH_7_msdon.1";
      sa[291] = "pH_8_msdon.1";
      sa[292] = "pH_9_msdon.1";
      sa[293] = "pH_10_msdon.1";
      sa[294] = "pH_11_msdon.1";
      sa[295] = "pH_12_msdon.1";
      sa[296] = "pH_13_msdon.1";
      sa[297] = "pH_14_msdon.1";
      sa[298] = "Time_Days";
    }
  }
}

class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_0_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[26 /* Hyper_wiener_index */] <-4977129.5f ? 
             (data[82 /* pI */] <5.1484375f ? 
                -2.3842132f : 
                -3.4421122f) : 
             (data[91 /* Encaps_rate */] <34.246876f ? 
                1.6877837f : 
                 (data[87 /* PVA_conc_inner_phase */] <0.5029297f ? 
                    -0.50791186f : 
                    -1.1428251f))) : 
         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.25f ? 
             (Double.isNaN(data[82]) || data[82 /* pI */] <7.0336914f ? 
                 (Double.isNaN(data[138]) || data[138 /* Minimal_projection_radius.1 */] <23.497032f ? 
                     (data[70 /* Ring_count.2 */] <26.5f ? 
                        0.44250762f : 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <77.71875f ? 
                            -0.52377015f : 
                            -1.0185078f)) : 
                    1.34791f) : 
                1.7508891f) : 
            3.3199267f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_1_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <3.967547f ? 
         (data[298 /* Time_Days */] <0.23247345f ? 
            -4.870761f : 
             (Double.isNaN(data[19]) || data[19 /* Dreiding_energy */] <610150.75f ? 
                -2.5763495f : 
                -0.688821f)) : 
         (data[99 /* Prod_method */] <1.5f ? 
             (data[26 /* Hyper_wiener_index */] <-3408694.5f ? 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <53.55f ? 
                    -2.042372f : 
                    -2.930253f) : 
                 (data[91 /* Encaps_rate */] <34.375f ? 
                    2.6632462f : 
                    -0.04820904f)) : 
             (data[298 /* Time_Days */] <18.463558f ? 
                 (data[76 /* Ring_atom_count.2 */] <431.0f ? 
                    -0.31936318f : 
                    2.248708f) : 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <84.1f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.19555f ? 
                        1.970063f : 
                        1.4606214f) : 
                    3.5370371f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_2_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <4.9594336f ? 
         (data[30 /* Maximal_projection_radius */] <28.710722f ? 
            -1.532917f : 
             (data[298 /* Time_Days */] <0.34871018f ? 
                -4.20659f : 
                 (data[298 /* Time_Days */] <1.204702f ? 
                    -2.0210893f : 
                    -1.5073038f))) : 
         (data[99 /* Prod_method */] <1.5f ? 
             (Double.isNaN(data[82]) || data[82 /* pI */] <4.890039f ? 
                 (data[298 /* Time_Days */] <22.964172f ? 
                    -0.4013533f : 
                    2.3880124f) : 
                 (data[89 /* PVA_Mw */] <28437.5f ? 
                    -2.5732286f : 
                    -2.0742128f)) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <86.0875f ? 
                 (data[298 /* Time_Days */] <19.952187f ? 
                    0.30235994f : 
                     (data[91 /* Encaps_rate */] <72.47393f ? 
                        2.027327f : 
                        1.3467104f)) : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <23.062227f ? 
                    1.9367133f : 
                    3.4400027f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_3_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <22.978708f ? 
             (data[13 /* Carboaromatic_ring_count */] <11.5f ? 
                -0.02209177f : 
                 (Double.isNaN(data[82]) || data[82 /* pI */] <4.6890626f ? 
                    -1.8681908f : 
                    -3.1412494f)) : 
             (data[26 /* Hyper_wiener_index */] <1.4402416E8f ? 
                -1.214057f : 
                2.2864249f)) : 
         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <35434.5f ? 
             (data[18 /* Balaban_index */] <411.17966f ? 
                 (data[298 /* Time_Days */] <25.127796f ? 
                    2.5525488E-4f : 
                    2.2455585f) : 
                 (data[298 /* Time_Days */] <5.95132f ? 
                    -2.534427f : 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <29.312319f ? 
                        0.3553525f : 
                        1.888158f))) : 
            2.2080443f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_4_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <3.967547f ? 
         (data[298 /* Time_Days */] <0.23247345f ? 
            -3.9323633f : 
             (data[83 /* Quaternary_structure */] <1.5f ? 
                -2.1938019f : 
                -0.61858356f)) : 
         (data[99 /* Prod_method */] <1.5f ? 
             (data[92 /* Mean_part_size */] <11.35475f ? 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <30.866938f ? 
                    -0.49636313f : 
                    1.9744965f) : 
                 (Double.isNaN(data[14]) || data[14 /* Carbo_ring_count */] <17.0f ? 
                    -0.5762616f : 
                    -1.9980158f)) : 
             (Double.isNaN(data[127]) || data[127 /* Asymmetric_atom_count.1 */] <46.5f ? 
                 (data[99 /* Prod_method */] <2.5f ? 
                     (data[22 /* Fused_ring_count */] <11.0f ? 
                        2.7181222f : 
                        1.9320855f) : 
                     (data[298 /* Time_Days */] <14.06969f ? 
                        -0.29457054f : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <73.55484f ? 
                            1.8932287f : 
                            1.0132693f))) : 
                0.11130708f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_5_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <9.918867f ? 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <36.4775f ? 
             (data[85 /* PLGA_Mw */] <43172.5f ? 
                0.21697384f : 
                 (data[298 /* Time_Days */] <3.869922f ? 
                    -2.1165044f : 
                    -1.0876017f)) : 
             (data[298 /* Time_Days */] <1.1236217f ? 
                -3.1749413f : 
                -1.1304832f)) : 
         (Double.isNaN(data[148]) || data[148 /* pH_0_logd */] <1.1828125f ? 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <84.1f ? 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <46.150623f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <37.42922f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <28.075312f ? 
                            0.29264605f : 
                            1.4190959f) : 
                        -0.43577558f) : 
                     (data[92 /* Mean_part_size */] <28.6175f ? 
                        2.075066f : 
                        1.1360799f)) : 
                 (data[298 /* Time_Days */] <23.406313f ? 
                    1.2969626f : 
                    2.5379562f)) : 
            -1.0709014f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_6_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[91 /* Encaps_rate */] <30.354687f ? 
            0.72460085f : 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <24.46654f ? 
                 (data[4 /* S_no */] <8.5f ? 
                    -0.71021926f : 
                     (Double.isNaN(data[126]) || data[126 /* Polar_surface_area */] <700.1503f ? 
                        -2.8026502f : 
                        -1.7265944f)) : 
                -0.4627666f)) : 
         (data[298 /* Time_Days */] <1.1572012f ? 
            -2.1486f : 
             (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <35438.5f ? 
                 (data[298 /* Time_Days */] <24.653406f ? 
                     (data[92 /* Mean_part_size */] <5.968219f ? 
                        -0.95455456f : 
                        0.82390654f) : 
                     (Double.isNaN(data[47]) || data[47 /* Aromatic_atom_count.1 */] <147.5f ? 
                        1.9195734f : 
                        0.94707227f)) : 
                2.4608195f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_7_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <3.967547f ? 
         (data[298 /* Time_Days */] <0.23247345f ? 
            -3.1397793f : 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <36.4775f ? 
                -0.37576202f : 
                -1.7000682f)) : 
         (Double.isNaN(data[162]) || data[162 /* pH_14_logd */] <1.1531348f ? 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <30.123392f ? 
                 (data[92 /* Mean_part_size */] <5.625f ? 
                     (data[91 /* Encaps_rate */] <83.4375f ? 
                        -1.0524849f : 
                        -0.23781545f) : 
                     (data[92 /* Mean_part_size */] <38.336914f ? 
                        1.9607124f : 
                         (data[91 /* Encaps_rate */] <76.37187f ? 
                            -0.627791f : 
                            0.5141012f))) : 
                 (Double.isNaN(data[23]) || data[23 /* Heteroaliphatic_ring_count */] <26.0f ? 
                     (data[298 /* Time_Days */] <42.104282f ? 
                        1.3998284f : 
                        1.9970874f) : 
                    0.4822314f)) : 
            -1.1402973f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_8_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[157]) || data[157 /* pH_9_logd */] <1.1979736f ? 
         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.8725586f ? 
             (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <1.81666592E8f ? 
                 (Double.isNaN(data[143]) || data[143 /* Wiener_index */] <1069024.0f ? 
                     (data[99 /* Prod_method */] <2.0f ? 
                         (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <-8313671.5f ? 
                            -1.7127054f : 
                            -0.77564293f) : 
                         (data[91 /* Encaps_rate */] <81.45f ? 
                            -0.13121688f : 
                            -0.6091149f)) : 
                    0.91516244f) : 
                 (data[36 /* Randic_index */] <991.3273f ? 
                     (data[147 /* Markush_library_size */] <0.5f ? 
                        1.4528534f : 
                        0.48543322f) : 
                     (data[91 /* Encaps_rate */] <49.65f ? 
                        1.0685061f : 
                        -0.29234996f))) : 
            2.2826784f) : 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <43.97025f ? 
            -0.7194338f : 
            -1.7134411f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_9_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.8737793f ? 
         (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <1.81666592E8f ? 
             (data[152 /* pH_4_logd */] <-4.6390624f ? 
                0.85474247f : 
                 (data[22 /* Fused_ring_count */] <3.0f ? 
                    0.0057638464f : 
                     (Double.isNaN(data[96]) || data[96 /* diss_pH */] <7.45f ? 
                         (Double.isNaN(data[126]) || data[126 /* Polar_surface_area */] <686.4219f ? 
                             (data[4 /* S_no */] <27.5f ? 
                                -1.2678634f : 
                                -1.8239697f) : 
                            -0.88035995f) : 
                        -0.41806957f))) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <82.609375f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <5.625f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <2.0872266f ? 
                        0.43820193f : 
                        -0.58153856f) : 
                    1.2277224f) : 
                0.9902386f)) : 
        1.9199106f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_10_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (Double.isNaN(data[82]) || data[82 /* pI */] <4.897217f ? 
             (data[91 /* Encaps_rate */] <28.45f ? 
                0.9701038f : 
                 (data[26 /* Hyper_wiener_index */] <5.17311616E8f ? 
                    -0.93317854f : 
                    -0.37715334f)) : 
             (data[89 /* PVA_Mw */] <28047.0f ? 
                -1.6352241f : 
                -0.84098685f)) : 
         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.25f ? 
             (Double.isNaN(data[133]) || data[133 /* Harary_index */] <2088.741f ? 
                 (Double.isNaN(data[82]) || data[82 /* pI */] <7.024414f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <76.145f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <21.65728f ? 
                            -0.3147525f : 
                            0.10322066f) : 
                        -0.62792325f) : 
                    0.62900084f) : 
                1.0676956f) : 
            1.7822082f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_11_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[91 /* Encaps_rate */] <30.354687f ? 
            0.50916374f : 
             (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <-3408694.5f ? 
                 (data[19 /* Dreiding_energy */] <626614.2f ? 
                    -1.8458426f : 
                    -1.0386432f) : 
                 (data[88 /* PVA_conc_outer_phase */] <0.3984375f ? 
                    -1.0169765f : 
                    0.052395836f))) : 
         (data[4 /* S_no */] <10.5f ? 
             (data[3 /* O_no */] <157.5f ? 
                -0.122536495f : 
                -0.5007312f) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <84.96875f ? 
                 (data[134 /* Hyper_wiener_index.1 */] <-4.85548224E8f ? 
                    1.063419f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <72.75781f ? 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <50.840088f ? 
                            -0.14980793f : 
                            0.8253704f) : 
                        -0.5119175f)) : 
                 (Double.isNaN(data[117]) || data[117 /* a_xx_ */] <75.750114f ? 
                    1.9243956f : 
                    1.0802805f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_12_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.8737793f ? 
         (data[152 /* pH_4_logd */] <-6.1248536f ? 
            1.026048f : 
             (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <1.81666592E8f ? 
                 (Double.isNaN(data[21]) || data[21 /* Fused_aromatic_ring_count */] <5.0f ? 
                     (data[91 /* Encaps_rate */] <46.3375f ? 
                        -1.2820799f : 
                         (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.78125f ? 
                             (Double.isNaN(data[145]) || data[145 /* Stereoisomer_count */] <0.5f ? 
                                 (data[91 /* Encaps_rate */] <78.535f ? 
                                    0.074902326f : 
                                    -0.58620566f) : 
                                0.47226962f) : 
                            -0.78772235f)) : 
                    -1.3511456f) : 
                 (Double.isNaN(data[18]) || data[18 /* Balaban_index */] <1750.5916f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <5.3123436f ? 
                        0.3078834f : 
                        0.9386873f) : 
                     (data[91 /* Encaps_rate */] <49.65f ? 
                        0.47701508f : 
                        -0.29749122f)))) : 
        1.4754168f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_13_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.010048828f ? 
             (data[92 /* Mean_part_size */] <2.099f ? 
                -0.025184488f : 
                 (data[94 /* PLGA_conc */] <11.5427265f ? 
                    -0.8751331f : 
                    -1.2647729f)) : 
            0.80709124f) : 
         (data[19 /* Dreiding_energy */] <589571.5f ? 
             (data[2 /* N_no */] <150.5f ? 
                0.0077048684f : 
                -0.2108957f) : 
             (data[90 /* Inner_phase_volume */] <1.5195312f ? 
                1.3151037f : 
                 (Double.isNaN(data[161]) || data[161 /* pH_13_logd */] <0.5663672f ? 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.90625f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <75.10328f ? 
                             (Double.isNaN(data[183]) || data[183 /* pH_0_msdon */] <1.5f ? 
                                0.5419365f : 
                                -0.2692933f) : 
                            -0.5434563f) : 
                        0.7304463f) : 
                    0.93383706f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_14_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[161]) || data[161 /* pH_13_logd */] <1.1879736f ? 
         (data[298 /* Time_Days */] <5.95132f ? 
             (data[298 /* Time_Days */] <0.2557208f ? 
                -2.7989333f : 
                 (Double.isNaN(data[24]) || data[24 /* Heteroaromatic_ring_count */] <11.0f ? 
                    -1.2373538f : 
                    -0.15265533f)) : 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.984375f ? 
                 (data[94 /* PLGA_conc */] <6.9669685f ? 
                    1.0996362f : 
                     (data[298 /* Time_Days */] <23.164688f ? 
                         (data[99 /* Prod_method */] <1.5f ? 
                            -0.80938387f : 
                            0.1523895f) : 
                         (Double.isNaN(data[7]) || data[7 /* Aliphatic_ring_count */] <26.0f ? 
                             (data[298 /* Time_Days */] <32.89895f ? 
                                0.7703394f : 
                                 (data[85 /* PLGA_Mw */] <52500.5f ? 
                                    1.7189351f : 
                                    1.097463f)) : 
                            0.24102643f))) : 
                1.3220118f)) : 
        -0.70808786f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_15_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <10.993411f ? 
         (data[298 /* Time_Days */] <0.021471506f ? 
            -2.7678735f : 
             (Double.isNaN(data[43]) || data[43 /* Ring_system_count */] <90.5f ? 
                 (data[164 /* bpKa1 */] <-2.7973828f ? 
                    -0.15309833f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <78.1375f ? 
                        -0.81928843f : 
                        -1.7294265f)) : 
                0.2683651f)) : 
         (data[75 /* Heteroaromatic_ring_count.2 */] <3.5f ? 
            1.4857163f : 
             (data[84 /* PLGA_visc */] <0.42490235f ? 
                -0.3198959f : 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <81.45f ? 
                     (data[298 /* Time_Days */] <37.365845f ? 
                         (data[84 /* PLGA_visc */] <0.58171874f ? 
                            0.36086437f : 
                            -0.3372825f) : 
                         (data[91 /* Encaps_rate */] <52.640625f ? 
                            1.3587604f : 
                            0.5969456f)) : 
                    1.2846521f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_16_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[91 /* Encaps_rate */] <28.532812f ? 
            0.94616526f : 
             (data[8 /* Aromatic_atom_count */] <84.5f ? 
                0.39078405f : 
                 (data[84 /* PLGA_visc */] <0.39076173f ? 
                    -1.4707329f : 
                     (data[89 /* PVA_Mw */] <18136.5f ? 
                        -1.0820336f : 
                         (data[91 /* Encaps_rate */] <56.065624f ? 
                            -0.16438366f : 
                            -0.6331172f))))) : 
         (data[4 /* S_no */] <10.5f ? 
             (Double.isNaN(data[96]) || data[96 /* diss_pH */] <7.79375f ? 
                -0.15824339f : 
                -0.24882619f) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <84.92812f ? 
                 (Double.isNaN(data[137]) || data[137 /* Minimal_projection_area.1 */] <729.69867f ? 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <72.75781f ? 
                         (data[153 /* pH_5_logd */] <-2.365f ? 
                            -0.15815388f : 
                            0.56617665f) : 
                        -0.41946518f) : 
                    0.7906674f) : 
                 (Double.isNaN(data[145]) || data[145 /* Stereoisomer_count */] <0.5f ? 
                    1.1736085f : 
                    0.76063126f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_17_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[26 /* Hyper_wiener_index */] <-4977129.5f ? 
             (data[82 /* pI */] <5.1484375f ? 
                -0.52155983f : 
                -1.0005368f) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <64.8875f ? 
                0.55896765f : 
                -0.38568476f)) : 
         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <35434.5f ? 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <90.725f ? 
                 (Double.isNaN(data[143]) || data[143 /* Wiener_index */] <7442895.5f ? 
                     (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.78125f ? 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <79.60039f ? 
                            0.007116415f : 
                            -0.44696113f) : 
                        0.117310666f) : 
                    0.46915498f) : 
                0.57326627f) : 
            0.64710087f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_18_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <1.1572012f ? 
         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <38838.0f ? 
            -1.8320752f : 
            -1.0737298f) : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <29.039486f ? 
             (Double.isNaN(data[49]) || data[49 /* Aliphatic_bond_count.1 */] <4345.5f ? 
                 (Double.isNaN(data[97]) || data[97 /* diss_add */] <0.5f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <12.911157f ? 
                         (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.625f ? 
                            -1.2719734f : 
                            -0.544202f) : 
                         (Double.isNaN(data[99]) || data[99 /* Prod_method */] <1.5f ? 
                            -0.5137736f : 
                            0.11170534f)) : 
                    0.51014453f) : 
                 (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.57860935f ? 
                    0.9790278f : 
                    -0.24005315f)) : 
             (Double.isNaN(data[24]) || data[24 /* Heteroaromatic_ring_count */] <18.0f ? 
                 (data[96 /* diss_pH */] <6.2f ? 
                    0.7919071f : 
                    1.3921772f) : 
                0.29295704f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_19_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.8737793f ? 
         (data[298 /* Time_Days */] <14.051728f ? 
             (data[298 /* Time_Days */] <0.21955825f ? 
                -2.0911055f : 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.34375f ? 
                     (data[4 /* S_no */] <6.5f ? 
                        -1.329789f : 
                         (Double.isNaN(data[78]) || data[78 /* Chain_atom_count.2 */] <2677.5f ? 
                            -0.45657736f : 
                            -1.2204055f)) : 
                    0.14306006f)) : 
             (data[8 /* Aromatic_atom_count */] <84.5f ? 
                1.3713194f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.964108f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <10.994062f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <4.3852735f ? 
                            0.27496454f : 
                            0.68786895f) : 
                         (Double.isNaN(data[182]) || data[182 /* pH_14_msacc */] <73.49219f ? 
                            -0.7050476f : 
                            0.4087361f)) : 
                    1.2460378f))) : 
        0.9337881f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_20_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[148]) || data[148 /* pH_0_logd */] <1.1979736f ? 
         (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.7470703f ? 
             (data[22 /* Fused_ring_count */] <5.0f ? 
                 (data[21 /* Fused_aromatic_ring_count */] <3.0f ? 
                    0.24514827f : 
                    1.0108209f) : 
                 (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <35234.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <62.302345f ? 
                         (Double.isNaN(data[58]) || data[58 /* Ring_atom_count.1 */] <250.0f ? 
                            -0.0024306139f : 
                            0.5132333f) : 
                        -0.015051345f) : 
                    -0.27391705f)) : 
             (Double.isNaN(data[142]) || data[142 /* Szeged_index.1 */] <1240483.0f ? 
                 (data[91 /* Encaps_rate */] <57.24375f ? 
                    -0.8032057f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <82.05064f ? 
                        -0.08565798f : 
                        -0.62409765f)) : 
                0.29207036f)) : 
        -0.5056588f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_21_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.16531445f ? 
        -2.0032175f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <22.93415f ? 
             (data[92 /* Mean_part_size */] <6.06575f ? 
                 (data[92 /* Mean_part_size */] <0.7164912f ? 
                    -0.47640935f : 
                    -1.1604677f) : 
                 (data[92 /* Mean_part_size */] <36.134888f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <24.197277f ? 
                        0.09656194f : 
                        1.3760284f) : 
                     (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <12.606078f ? 
                        -0.1348314f : 
                        -0.67522913f))) : 
             (data[4 /* S_no */] <8.5f ? 
                1.4248948f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.23383f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <11.676562f ? 
                         (data[298 /* Time_Days */] <39.206642f ? 
                            0.391251f : 
                            0.89388466f) : 
                        -0.18857378f) : 
                    1.1107559f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_22_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[26 /* Hyper_wiener_index */] <-4977129.5f ? 
             (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <16.668097f ? 
                -0.40410334f : 
                -0.840932f) : 
             (data[5 /* Aliphatic_atom_count */] <1956.0f ? 
                0.4496882f : 
                -0.07596152f)) : 
         (data[92 /* Mean_part_size */] <4.30275f ? 
            -0.3312733f : 
             (data[9 /* Aromatic_bond_count */] <114.0f ? 
                -0.24382283f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.76778f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <24.334686f ? 
                         (data[150 /* pH_2_logd */] <0.2125f ? 
                            0.3397812f : 
                            0.415695f) : 
                        0.7546096f) : 
                    -0.14717345f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_23_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <1.1572012f ? 
         (data[298 /* Time_Days */] <0.07119499f ? 
            -1.797457f : 
            -0.6889154f) : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <23.006477f ? 
             (data[92 /* Mean_part_size */] <6.06575f ? 
                 (Double.isNaN(data[82]) || data[82 /* pI */] <4.6316404f ? 
                    -0.34697276f : 
                    -0.9889267f) : 
                 (Double.isNaN(data[161]) || data[161 /* pH_13_logd */] <0.6876562f ? 
                     (data[92 /* Mean_part_size */] <38.712242f ? 
                        0.91103584f : 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <9.683516f ? 
                            -0.34185442f : 
                            0.2115666f)) : 
                    -0.3608329f)) : 
             (data[94 /* PLGA_conc */] <11.067094f ? 
                0.9532367f : 
                 (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <1.57921744E8f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <52.409813f ? 
                        -0.08473234f : 
                        0.6764296f) : 
                    0.63722104f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_24_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <3.967547f ? 
         (data[298 /* Time_Days */] <0.023247346f ? 
            -1.740557f : 
             (Double.isNaN(data[58]) || data[58 /* Ring_atom_count.1 */] <326.5f ? 
                -0.9381057f : 
                -0.12702008f)) : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <29.020435f ? 
             (Double.isNaN(data[82]) || data[82 /* pI */] <5.320703f ? 
                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <43344.0f ? 
                     (data[92 /* Mean_part_size */] <28.544f ? 
                        0.9799299f : 
                        0.15936692f) : 
                     (Double.isNaN(data[138]) || data[138 /* Minimal_projection_radius.1 */] <11.189062f ? 
                        -0.48042744f : 
                        0.43872556f)) : 
                 (data[112 /* Chain_bond_count.2 */] <28.5f ? 
                    -0.29632813f : 
                    -0.5054326f)) : 
             (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.7470703f ? 
                 (data[96 /* diss_pH */] <6.2f ? 
                    0.52410066f : 
                    1.110895f) : 
                0.20526183f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_25_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[298 /* Time_Days */] <3.967547f ? 
            -0.8038466f : 
             (data[91 /* Encaps_rate */] <30.271875f ? 
                0.9660934f : 
                 (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <39375.5f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <29.315422f ? 
                        -0.8778009f : 
                        -0.044772644f) : 
                    -0.016723901f))) : 
         (data[298 /* Time_Days */] <1.818459f ? 
            -1.0638846f : 
             (data[298 /* Time_Days */] <14.11243f ? 
                 (data[9 /* Aromatic_bond_count */] <212.0f ? 
                    -0.67452544f : 
                    0.44221514f) : 
                 (data[19 /* Dreiding_energy */] <588467.6f ? 
                    0.8599144f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <79.1875f ? 
                         (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <5.15625f ? 
                            0.3161352f : 
                            0.1345777f) : 
                        0.68918306f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_26_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[99 /* Prod_method */] <1.5f ? 
         (data[91 /* Encaps_rate */] <28.532812f ? 
            0.6874879f : 
             (data[57 /* Heteroaromatic_ring_count.1 */] <3.5f ? 
                0.32880113f : 
                 (data[84 /* PLGA_visc */] <0.39076173f ? 
                    -1.0038586f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <65.123436f ? 
                         (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.46875f ? 
                            -0.004469776f : 
                            -0.4933309f) : 
                        -0.5150745f)))) : 
         (Double.isNaN(data[143]) || data[143 /* Wiener_index */] <7442895.5f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <66.4485f ? 
                 (data[84 /* PLGA_visc */] <0.37398437f ? 
                    -0.14928284f : 
                     (data[92 /* Mean_part_size */] <4.3825f ? 
                        -0.19162889f : 
                         (Double.isNaN(data[22]) || data[22 /* Fused_ring_count */] <10.0f ? 
                             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.682875f ? 
                                0.41819817f : 
                                0.09186326f) : 
                            0.40535247f))) : 
                -0.2781296f) : 
            0.49352401f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_27_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -1.4577816f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <16.928265f ? 
             (data[92 /* Mean_part_size */] <6.06575f ? 
                 (data[95 /* PLGA_to_Placticizer */] <0.78125f ? 
                    -1.1672932f : 
                    -0.30847648f) : 
                 (data[85 /* PLGA_Mw */] <35781.5f ? 
                     (data[94 /* PLGA_conc */] <14.145062f ? 
                        0.23363324f : 
                        -0.72627723f) : 
                     (data[85 /* PLGA_Mw */] <43073.0f ? 
                        1.2132559f : 
                        -0.13588549f))) : 
             (data[10 /* Aromatic_ring_count */] <16.5f ? 
                1.1469667f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.016678f ? 
                     (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.7851562f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <33.636234f ? 
                             (data[43 /* Ring_system_count */] <31.0f ? 
                                -0.13147205f : 
                                0.18196522f) : 
                            0.5400926f) : 
                        -0.17601465f) : 
                    0.78597665f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_28_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.8725586f ? 
             (data[99 /* Prod_method */] <1.5f ? 
                 (Double.isNaN(data[82]) || data[82 /* pI */] <4.861328f ? 
                     (data[91 /* Encaps_rate */] <34.4125f ? 
                        0.25364435f : 
                        -0.3959617f) : 
                     (data[138 /* Minimal_projection_radius.1 */] <11.189062f ? 
                        -0.6568363f : 
                        -0.33264062f)) : 
                 (Double.isNaN(data[142]) || data[142 /* Szeged_index.1 */] <7442895.5f ? 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <90.75f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <77.309654f ? 
                             (data[154 /* pH_6_logd */] <-1.907f ? 
                                -0.24590024f : 
                                 (data[91 /* Encaps_rate */] <72.7625f ? 
                                    0.2717756f : 
                                    -0.09785477f)) : 
                            -0.3428699f) : 
                        0.33544868f) : 
                    0.41628328f)) : 
            0.49074838f) : 
        0.4449075f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_29_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
         (data[84 /* PLGA_visc */] <0.3903535f ? 
             (data[26 /* Hyper_wiener_index */] <-4.89623456E8f ? 
                -0.2256707f : 
                -0.52330923f) : 
             (data[99 /* Prod_method */] <1.5f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <48.67921f ? 
                     (Double.isNaN(data[145]) || data[145 /* Stereoisomer_count */] <0.5f ? 
                        -0.13888632f : 
                        -0.057334863f) : 
                    -0.42205334f) : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.493546f ? 
                     (data[85 /* PLGA_Mw */] <52500.5f ? 
                         (data[92 /* Mean_part_size */] <26.986368f ? 
                            0.405855f : 
                            0.4297165f) : 
                         (Double.isNaN(data[194]) || data[194 /* pH_11_msdon */] <1.5f ? 
                             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <1.25f ? 
                                0.14970641f : 
                                0.32299536f) : 
                            -0.19801742f)) : 
                    -0.14344816f))) : 
        0.49728015f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_30_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <99.50475f ? 
         (data[156 /* pH_8_logd */] <-4.669385f ? 
            0.47639498f : 
             (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.010117187f ? 
                 (data[85 /* PLGA_Mw */] <29484.5f ? 
                    -0.48396957f : 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <36.749527f ? 
                         (Double.isNaN(data[155]) || data[155 /* pH_7_logd */] <0.2125f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <5.798029f ? 
                                 (data[91 /* Encaps_rate */] <61.15f ? 
                                     (data[19 /* Dreiding_energy */] <633305.3f ? 
                                        0.26642016f : 
                                        -0.09926635f) : 
                                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <89.31625f ? 
                                        -0.35802612f : 
                                        -0.13840133f)) : 
                                0.21059282f) : 
                            0.37286898f) : 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <58.375f ? 
                            -0.3818663f : 
                            0.0023707894f))) : 
                0.30845237f)) : 
        -0.40842584f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_31_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.5786006f ? 
        -1.0168967f : 
         (data[84 /* PLGA_visc */] <0.3903535f ? 
             (Double.isNaN(data[97]) || data[97 /* diss_add */] <0.5f ? 
                -0.42748696f : 
                0.09241673f) : 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.043133f ? 
                 (data[85 /* PLGA_Mw */] <43344.0f ? 
                    0.548932f : 
                     (data[298 /* Time_Days */] <16.501825f ? 
                         (data[90 /* Inner_phase_volume */] <2.6328125f ? 
                            -0.56915003f : 
                             (data[117 /* a_xx_ */] <168.1725f ? 
                                -0.30377454f : 
                                0.22444132f)) : 
                         (Double.isNaN(data[52]) || data[52 /* Ring_count.1 */] <92.5f ? 
                             (data[94 /* PLGA_conc */] <13.6505f ? 
                                0.5553392f : 
                                0.27099213f) : 
                            -0.225713f))) : 
                0.8701739f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_32_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* Asymmetric_atom_count */] <51.5f ? 
        0.55292165f : 
         (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <19.031338f ? 
             (Double.isNaN(data[162]) || data[162 /* pH_14_logd */] <0.5163672f ? 
                 (data[91 /* Encaps_rate */] <28.45f ? 
                    0.1734187f : 
                     (data[91 /* Encaps_rate */] <45.778515f ? 
                        -0.4632541f : 
                         (Double.isNaN(data[18]) || data[18 /* Balaban_index */] <5395.9805f ? 
                             (data[91 /* Encaps_rate */] <73.5f ? 
                                0.27958816f : 
                                 (data[99 /* Prod_method */] <2.5f ? 
                                    0.16927227f : 
                                     (data[84 /* PLGA_visc */] <0.613f ? 
                                        -0.24627452f : 
                                        -0.021161754f))) : 
                            -0.20332162f))) : 
                0.25282815f) : 
            -0.323822f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_33_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* Chiral_center_count */] <51.5f ? 
        0.5085677f : 
         (data[298 /* Time_Days */] <14.051728f ? 
             (data[17 /* Cyclomatic_number */] <28.5f ? 
                -1.0249383f : 
                 (data[298 /* Time_Days */] <0.87775f ? 
                    -0.9159661f : 
                     (data[99 /* Prod_method */] <1.5f ? 
                        -0.4566974f : 
                         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <55375.5f ? 
                            0.41343713f : 
                            -0.1254711f)))) : 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.964108f ? 
                 (data[24 /* Heteroaromatic_ring_count */] <5.5f ? 
                    0.6710424f : 
                     (Double.isNaN(data[180]) || data[180 /* pH_12_msacc */] <27.90625f ? 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <61.575f ? 
                            0.23976451f : 
                            -0.44182393f) : 
                         (data[91 /* Encaps_rate */] <64.225f ? 
                            -0.0030620396f : 
                            0.49752215f))) : 
                0.7444805f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_34_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -1.0999024f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <27.993517f ? 
             (data[92 /* Mean_part_size */] <6.06575f ? 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <0.78125f ? 
                    -0.75958353f : 
                    -0.21231948f) : 
                 (data[92 /* Mean_part_size */] <36.134888f ? 
                     (Double.isNaN(data[178]) || data[178 /* pH_10_msacc */] <66.0f ? 
                         (data[298 /* Time_Days */] <9.675406f ? 
                            0.8862459f : 
                            0.37325957f) : 
                        -0.07644325f) : 
                     (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <1.484375f ? 
                         (data[92 /* Mean_part_size */] <83.03125f ? 
                            0.13909817f : 
                            -0.33495456f) : 
                        -0.4526859f))) : 
             (data[83 /* Quaternary_structure */] <1.5f ? 
                0.7209006f : 
                 (Double.isNaN(data[176]) || data[176 /* pH_8_msacc */] <28.5f ? 
                    0.014614091f : 
                    0.3657094f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_35_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <14.051728f ? 
         (data[298 /* Time_Days */] <0.027444782f ? 
            -1.0767995f : 
             (data[84 /* PLGA_visc */] <0.38964844f ? 
                -0.5090847f : 
                 (data[85 /* PLGA_Mw */] <43344.0f ? 
                    0.50060207f : 
                     (data[91 /* Encaps_rate */] <53.171875f ? 
                        -0.6453128f : 
                         (data[95 /* PLGA_to_Placticizer */] <0.525625f ? 
                            -0.3138166f : 
                            0.15750746f))))) : 
         (data[65 /* Aromatic_atom_count.2 */] <85.0f ? 
            0.74550545f : 
             (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <12.683027f ? 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.964108f ? 
                     (data[91 /* Encaps_rate */] <69.525f ? 
                        0.5569461f : 
                        -0.034086943f) : 
                    0.7483395f) : 
                 (data[99 /* Prod_method */] <1.5f ? 
                    -0.32110044f : 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <34.75319f ? 
                        0.10789829f : 
                        0.2778717f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_36_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* Chiral_center_count */] <51.5f ? 
        0.32031453f : 
         (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <19.031338f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.5390625f ? 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <86.0875f ? 
                     (data[91 /* Encaps_rate */] <28.491407f ? 
                        0.21923429f : 
                         (data[82 /* pI */] <4.6715627f ? 
                            -0.4789026f : 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <75.2625f ? 
                                 (data[91 /* Encaps_rate */] <48.634f ? 
                                    -0.2382517f : 
                                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <73.38355f ? 
                                        0.19427629f : 
                                        -0.03615467f)) : 
                                -0.36385047f))) : 
                     (data[19 /* Dreiding_energy */] <593794.3f ? 
                        -0.019188046f : 
                        0.25454843f)) : 
                0.25427237f) : 
            -0.29741624f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_37_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[91 /* Encaps_rate */] <28.532812f ? 
        0.27619946f : 
         (data[298 /* Time_Days */] <6.9432073f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <0.5859375f ? 
                 (data[83 /* Quaternary_structure */] <1.5f ? 
                    -1.0130584f : 
                    -0.26498356f) : 
                -0.16691878f) : 
             (data[99 /* Prod_method */] <1.5f ? 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <32.138203f ? 
                     (data[91 /* Encaps_rate */] <56.0625f ? 
                        -0.5678584f : 
                        -0.04198703f) : 
                    0.19482848f) : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <49.740295f ? 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <1.5625f ? 
                         (data[91 /* Encaps_rate */] <84.265625f ? 
                            -0.12156046f : 
                            0.18930846f) : 
                        0.42016366f) : 
                    0.4924805f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_38_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.5786006f ? 
        -0.7288689f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <32.922924f ? 
             (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
                 (data[92 /* Mean_part_size */] <22.3735f ? 
                     (data[26 /* Hyper_wiener_index */] <1.095186E8f ? 
                        -0.64878905f : 
                         (Double.isNaN(data[197]) || data[197 /* pH_14_msdon */] <10.005f ? 
                             (data[69 /* Rotatable_bond_count.2 */] <1132.5f ? 
                                0.21320367f : 
                                -0.15129235f) : 
                            -0.3328748f)) : 
                     (data[160 /* pH_12_logd */] <-3.4261718f ? 
                        0.617916f : 
                         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <38437.5f ? 
                            -0.35145113f : 
                            0.24874079f))) : 
                0.49049848f) : 
             (data[83 /* Quaternary_structure */] <1.5f ? 
                0.80386037f : 
                 (data[298 /* Time_Days */] <49.892918f ? 
                    0.0011883274f : 
                    0.26624677f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_39_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* Chiral_center_count */] <51.5f ? 
        0.5212378f : 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.3242188f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.5177002f ? 
                 (Double.isNaN(data[138]) || data[138 /* Minimal_projection_radius.1 */] <10.173282f ? 
                     (data[91 /* Encaps_rate */] <34.4125f ? 
                        0.26138374f : 
                         (data[99 /* Prod_method */] <1.5f ? 
                             (Double.isNaN(data[35]) || data[35 /* Platt_index */] <8787.0f ? 
                                -0.5501057f : 
                                0.118178055f) : 
                             (data[5 /* Aliphatic_atom_count */] <1429.5f ? 
                                -0.07902072f : 
                                 (data[91 /* Encaps_rate */] <77.0f ? 
                                    -0.050077606f : 
                                     (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <47988.0f ? 
                                        0.036772747f : 
                                        0.2807308f))))) : 
                    -0.17486197f) : 
                0.4120413f) : 
             (Double.isNaN(data[73]) || data[73 /* Hetero_ring_count.2 */] <28.5f ? 
                -0.18553397f : 
                -0.3051137f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_40_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <14.051728f ? 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <4.1015625f ? 
             (data[4 /* S_no */] <6.5f ? 
                -0.7432812f : 
                 (data[298 /* Time_Days */] <1.09625f ? 
                    -0.4985973f : 
                     (data[84 /* PLGA_visc */] <0.48835936f ? 
                        0.29107967f : 
                         (data[67 /* Aliphatic_bond_count.2 */] <2749.0f ? 
                            -0.09913359f : 
                            -0.36400315f)))) : 
            0.08686362f) : 
         (data[57 /* Heteroaromatic_ring_count.1 */] <3.5f ? 
            0.730372f : 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.966656f ? 
                 (Double.isNaN(data[142]) || data[142 /* Szeged_index.1 */] <2853110.0f ? 
                     (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <30469.5f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <38.926624f ? 
                             (data[84 /* PLGA_visc */] <0.657f ? 
                                -0.19811669f : 
                                0.0093535725f) : 
                            0.28557858f) : 
                        -0.3405519f) : 
                    0.40876177f) : 
                0.39943054f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_41_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* Asymmetric_atom_count */] <51.5f ? 
        0.47455287f : 
         (Double.isNaN(data[22]) || data[22 /* Fused_ring_count */] <5.0f ? 
             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.6984727f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.493546f ? 
                     (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <1.484375f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <26.7525f ? 
                             (data[85 /* PLGA_Mw */] <30600.5f ? 
                                0.008547154f : 
                                0.11975078f) : 
                            0.26418123f) : 
                        -0.15156502f) : 
                    -0.25975832f) : 
                0.31417796f) : 
             (Double.isNaN(data[191]) || data[191 /* pH_8_msdon */] <1.5f ? 
                 (data[88 /* PVA_conc_outer_phase */] <1.5125f ? 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <34.775f ? 
                        0.12959503f : 
                        -0.4559835f) : 
                    0.0630547f) : 
                -0.2996625f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_42_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[91 /* Encaps_rate */] <28.532812f ? 
        0.1640203f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <18.019276f ? 
             (data[85 /* PLGA_Mw */] <29422.5f ? 
                -0.5833761f : 
                 (data[298 /* Time_Days */] <0.6318281f ? 
                    -0.542261f : 
                     (data[162 /* pH_14_logd */] <-4.800156f ? 
                        0.49665803f : 
                         (data[91 /* Encaps_rate */] <52.76719f ? 
                            -0.580414f : 
                             (data[84 /* PLGA_visc */] <0.486875f ? 
                                0.2034139f : 
                                -0.13002983f))))) : 
             (data[4 /* S_no */] <8.5f ? 
                0.58023334f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <56.036034f ? 
                     (Double.isNaN(data[173]) || data[173 /* pH_5_msacc */] <28.5f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <12.89375f ? 
                            0.06677611f : 
                            -0.4220657f) : 
                        0.29080218f) : 
                    0.30690205f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_43_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -0.7292829f : 
         (data[298 /* Time_Days */] <14.120664f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.5390625f ? 
                 (data[4 /* S_no */] <6.5f ? 
                    -0.6799982f : 
                     (data[94 /* PLGA_conc */] <7.989125f ? 
                        0.21153486f : 
                         (data[91 /* Encaps_rate */] <52.41875f ? 
                            -0.49822876f : 
                            -0.08800061f))) : 
                0.1902935f) : 
             (data[14 /* Carbo_ring_count */] <11.5f ? 
                0.5968466f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <56.00606f ? 
                     (Double.isNaN(data[119]) || data[119 /* a_zz_ */] <653.47736f ? 
                         (Double.isNaN(data[59]) || data[59 /* Ring_bond_count.1 */] <507.5f ? 
                             (data[91 /* Encaps_rate */] <52.64f ? 
                                0.21435863f : 
                                 (Double.isNaN(data[153]) || data[153 /* pH_5_logd */] <0.996f ? 
                                    -0.21534288f : 
                                    0.12372929f)) : 
                            -0.30896243f) : 
                        0.33041418f) : 
                    0.44037428f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_44_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -0.72717786f : 
         (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.6984727f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <99.064f ? 
                     (Double.isNaN(data[0]) || data[0 /* C_no */] <2412.5f ? 
                         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <32031.5f ? 
                             (data[298 /* Time_Days */] <21.222242f ? 
                                 (data[298 /* Time_Days */] <6.4310727f ? 
                                    -0.28855368f : 
                                    -0.13542418f) : 
                                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <48.01426f ? 
                                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <63.0f ? 
                                        0.07304433f : 
                                        0.011806033f) : 
                                    0.34805986f)) : 
                            -0.23302917f) : 
                         (Double.isNaN(data[175]) || data[175 /* pH_7_msacc */] <80.5f ? 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <33.905994f ? 
                                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <81.283f ? 
                                    -0.27260357f : 
                                    0.1948998f) : 
                                0.2902025f) : 
                            0.41714543f)) : 
                    -0.39733705f) : 
                0.32727948f) : 
            0.40276065f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_45_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* Mean_part_size */] <0.556375f ? 
        -0.17333199f : 
         (data[92 /* Mean_part_size */] <3.8587718f ? 
            0.29992932f : 
             (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
                 (data[99 /* Prod_method */] <1.5f ? 
                     (data[88 /* PVA_conc_outer_phase */] <0.390625f ? 
                        -0.30499026f : 
                         (data[46 /* Aliphatic_atom_count.1 */] <3165.5f ? 
                            0.011949647f : 
                            -0.08328837f)) : 
                     (data[298 /* Time_Days */] <1.3225156f ? 
                        -0.40226632f : 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <27.359543f ? 
                             (data[30 /* Maximal_projection_radius */] <31.05625f ? 
                                -0.2699728f : 
                                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <42100.5f ? 
                                    0.22276379f : 
                                    0.09267428f)) : 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.014f ? 
                                 (data[298 /* Time_Days */] <44.54398f ? 
                                    0.18479046f : 
                                    0.36969173f) : 
                                0.028751645f)))) : 
                0.2059746f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_46_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <6.9432073f ? 
         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <45244.5f ? 
             (data[70 /* Ring_count.2 */] <36.5f ? 
                -0.67205775f : 
                 (data[89 /* PVA_Mw */] <23889.0f ? 
                    0.05312887f : 
                    -0.24706018f)) : 
            0.12912871f) : 
         (data[54 /* Aromatic_ring_count.1 */] <17.0f ? 
            0.36851305f : 
             (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <12.683027f ? 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.90625f ? 
                     (data[89 /* PVA_Mw */] <30680.5f ? 
                        0.039872967f : 
                         (data[99 /* Prod_method */] <3.0f ? 
                            0.21644829f : 
                            0.1488616f)) : 
                    0.32573348f) : 
                 (data[85 /* PLGA_Mw */] <52969.0f ? 
                    -0.20325105f : 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <31.018555f ? 
                        -0.055833817f : 
                        0.078334935f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_47_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* Chiral_center_count */] <51.5f ? 
        0.1964783f : 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.3242188f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <64.24475f ? 
                 (data[84 /* PLGA_visc */] <0.37447265f ? 
                    -0.28404355f : 
                     (Double.isNaN(data[197]) || data[197 /* pH_14_msdon */] <10.78664f ? 
                         (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <6.9729843E8f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <15.752f ? 
                                 (data[92 /* Mean_part_size */] <4.9608f ? 
                                    0.12702999f : 
                                    0.07258613f) : 
                                 (data[85 /* PLGA_Mw */] <43000.5f ? 
                                    0.06529107f : 
                                    -0.03047318f)) : 
                            -0.05935572f) : 
                        -0.1682002f)) : 
                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <48156.5f ? 
                    0.17870882f : 
                    0.32958356f)) : 
             (data[92 /* Mean_part_size */] <43.97025f ? 
                -0.06026065f : 
                -0.30358794f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_48_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[97]) || data[97 /* diss_add */] <1.5f ? 
         (Double.isNaN(data[143]) || data[143 /* Wiener_index */] <93036.5f ? 
             (data[91 /* Encaps_rate */] <34.909374f ? 
                0.27400592f : 
                 (data[298 /* Time_Days */] <15.539558f ? 
                     (data[72 /* Aromatic_ring_count.2 */] <25.5f ? 
                        -0.6042938f : 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <8.07075f ? 
                             (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.5f ? 
                                -0.11439695f : 
                                0.034604363f) : 
                            -0.15747528f)) : 
                     (data[4 /* S_no */] <7.5f ? 
                        0.5140296f : 
                         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <47500.5f ? 
                            -0.08360477f : 
                            0.164604f)))) : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <78.63438f ? 
                 (data[84 /* PLGA_visc */] <0.6025195f ? 
                    0.0059773223f : 
                    -0.3040362f) : 
                0.08241226f)) : 
        0.2776374f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_49_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* Mean_part_size */] <0.556375f ? 
        -0.15781917f : 
         (data[298 /* Time_Days */] <0.3306289f ? 
            -0.49187288f : 
             (data[91 /* Encaps_rate */] <29.1125f ? 
                0.36509186f : 
                 (data[161 /* pH_13_logd */] <-3.4361718f ? 
                    0.37200004f : 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <77.01922f ? 
                         (data[99 /* Prod_method */] <1.5f ? 
                             (data[298 /* Time_Days */] <12.99535f ? 
                                -0.50652826f : 
                                 (data[92 /* Mean_part_size */] <49.222f ? 
                                    -0.004087314f : 
                                    0.06090544f)) : 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <38.28205f ? 
                                 (data[58 /* Ring_atom_count.1 */] <165.5f ? 
                                    -0.33146587f : 
                                     (data[298 /* Time_Days */] <8.34601f ? 
                                        0.31189653f : 
                                        0.1183352f)) : 
                                0.33992034f)) : 
                        -0.3162387f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_50_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.5786006f ? 
        -0.3944199f : 
         (data[298 /* Time_Days */] <14.041719f ? 
             (data[149 /* pH_1_logd */] <-3.3655274f ? 
                0.2109774f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <7.0083437f ? 
                     (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <0.5078125f ? 
                        -0.41246247f : 
                        -0.0022548593f) : 
                     (Double.isNaN(data[15]) || data[15 /* Chain_atom_count */] <2647.0f ? 
                        0.10613618f : 
                        -0.16542219f))) : 
             (Double.isNaN(data[21]) || data[21 /* Fused_aromatic_ring_count */] <9.0f ? 
                 (data[91 /* Encaps_rate */] <34.74375f ? 
                    0.5932068f : 
                     (Double.isNaN(data[86]) || data[86 /* La_to_Gly */] <2.0f ? 
                         (data[91 /* Encaps_rate */] <69.5f ? 
                            0.23068006f : 
                             (data[298 /* Time_Days */] <31.69325f ? 
                                0.17558707f : 
                                -0.07569213f)) : 
                        0.37226227f)) : 
                 (data[110 /* Ring_bond_count.3 */] <28.5f ? 
                    -0.20681857f : 
                    0.017989313f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_51_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -0.5626407f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.051365f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <4.1015625f ? 
                 (data[91 /* Encaps_rate */] <28.45f ? 
                    0.24893686f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <83.78945f ? 
                         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <70.26709f ? 
                             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <45.926834f ? 
                                -0.29980886f : 
                                0.1017018f) : 
                            -0.42604285f) : 
                         (data[298 /* Time_Days */] <12.846f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <19.536375f ? 
                                -0.26073724f : 
                                -0.019436117f) : 
                             (Double.isNaN(data[86]) || data[86 /* La_to_Gly */] <2.0f ? 
                                0.0746871f : 
                                0.33952755f)))) : 
                 (data[156 /* pH_8_logd */] <-2.2132812f ? 
                    0.6103145f : 
                    -0.036007952f)) : 
            0.37373275f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_52_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* Chiral_center_count */] <51.5f ? 
        0.14025529f : 
         (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69776756f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <101.26775f ? 
                 (Double.isNaN(data[183]) || data[183 /* pH_0_msdon */] <11.5f ? 
                     (data[1 /* H_no */] <1144.0f ? 
                        -0.23531246f : 
                         (Double.isNaN(data[119]) || data[119 /* a_zz_ */] <746.83124f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <55.1512f ? 
                                 (Double.isNaN(data[75]) || data[75 /* Heteroaromatic_ring_count.2 */] <11.0f ? 
                                     (Double.isNaN(data[43]) || data[43 /* Ring_system_count */] <42.5f ? 
                                        0.069175944f : 
                                        -0.07345988f) : 
                                    0.11934157f) : 
                                 (data[84 /* PLGA_visc */] <0.4175f ? 
                                    -0.05147155f : 
                                    -0.07085684f)) : 
                            0.19217134f)) : 
                    -0.24539338f) : 
                -0.2860357f) : 
            0.15373485f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_53_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.5786006f ? 
        -0.37967226f : 
         (Double.isNaN(data[82]) || data[82 /* pI */] <7.0361814f ? 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <27.504837f ? 
                 (data[148 /* pH_0_logd */] <-3.3048828f ? 
                    0.23841268f : 
                     (data[22 /* Fused_ring_count */] <3.0f ? 
                        -0.46560082f : 
                         (data[90 /* Inner_phase_volume */] <2.2578125f ? 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <11.261f ? 
                                0.09721846f : 
                                0.2482525f) : 
                             (data[85 /* PLGA_Mw */] <39613.0f ? 
                                -0.21325897f : 
                                -0.0812252f)))) : 
                 (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.7851562f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <43.00047f ? 
                        0.28119865f : 
                        0.513407f) : 
                    0.027892733f)) : 
             (Double.isNaN(data[116]) || data[116 /* molecular */] <197.01988f ? 
                0.001909496f : 
                -0.26531157f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_54_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* Mean_part_size */] <0.556375f ? 
        -0.11300366f : 
         (data[82 /* pI */] <4.7464843f ? 
            0.23223208f : 
             (data[39 /* Ring_atom_count */] <137.5f ? 
                -0.21301658f : 
                 (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.010117187f ? 
                     (data[91 /* Encaps_rate */] <50.859375f ? 
                         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <11719.0f ? 
                            -0.03681157f : 
                            -0.244557f) : 
                         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <55375.5f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <39.157f ? 
                                -0.009898433f : 
                                0.16545267f) : 
                             (data[91 /* Encaps_rate */] <79.115234f ? 
                                -0.22565337f : 
                                0.13465676f))) : 
                    0.27977362f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_55_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* Asymmetric_atom_count */] <51.5f ? 
        0.21406886f : 
         (data[298 /* Time_Days */] <7.1085215f ? 
             (data[65 /* Aromatic_atom_count.2 */] <128.5f ? 
                -0.44427374f : 
                 (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.78125f ? 
                     (data[298 /* Time_Days */] <1.1067188f ? 
                        -0.4403373f : 
                        0.04090075f) : 
                    0.02458122f)) : 
             (data[14 /* Carbo_ring_count */] <11.5f ? 
                0.280764f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <59.202126f ? 
                     (data[91 /* Encaps_rate */] <28.45f ? 
                        0.18672112f : 
                         (data[164 /* bpKa1 */] <-1.4371876f ? 
                             (data[88 /* PVA_conc_outer_phase */] <0.5f ? 
                                -0.09961421f : 
                                 (data[165 /* bpKa2 */] <-3.179f ? 
                                    0.059119415f : 
                                    0.1801956f)) : 
                             (data[26 /* Hyper_wiener_index */] <-3.1207664E8f ? 
                                -0.29773965f : 
                                -0.06613832f))) : 
                    0.25641072f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_56_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -0.2856438f : 
         (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <39.063805f ? 
                 (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <30429.5f ? 
                     (data[91 /* Encaps_rate */] <52.9625f ? 
                         (data[88 /* PVA_conc_outer_phase */] <1.09375f ? 
                            -0.20166145f : 
                            -0.35116246f) : 
                         (Double.isNaN(data[83]) || data[83 /* Quaternary_structure */] <1.5f ? 
                            -0.2189391f : 
                            0.10166683f)) : 
                     (data[88 /* PVA_conc_outer_phase */] <0.390625f ? 
                        -0.14249828f : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.382f ? 
                            0.33605343f : 
                            -0.0069336845f))) : 
                 (data[88 /* PVA_conc_outer_phase */] <0.4296875f ? 
                    0.45000303f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <76.875f ? 
                        -0.047199998f : 
                        0.11644721f))) : 
            0.3510628f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_57_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (data[91 /* Encaps_rate */] <28.532812f ? 
            0.15147395f : 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <99.50475f ? 
                 (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <9.5019962E8f ? 
                     (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <60696.5f ? 
                         (data[84 /* PLGA_visc */] <0.27265626f ? 
                            -0.17816728f : 
                             (data[57 /* Heteroaromatic_ring_count.1 */] <5.0f ? 
                                0.3097521f : 
                                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <74.1175f ? 
                                     (data[89 /* PVA_Mw */] <11250.5f ? 
                                        -0.11023304f : 
                                         (Double.isNaN(data[49]) || data[49 /* Aliphatic_bond_count.1 */] <2981.0f ? 
                                            0.07819744f : 
                                            0.3286274f)) : 
                                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <27.64675f ? 
                                        0.025355274f : 
                                        -0.262763f)))) : 
                        0.32228222f) : 
                    -0.28839853f) : 
                -0.4647315f)) : 
        0.105585225f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_58_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <14.051728f ? 
         (data[92 /* Mean_part_size */] <6.94725f ? 
             (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <60704.0f ? 
                -0.48100364f : 
                -0.07603583f) : 
             (data[36 /* Randic_index */] <1096.2263f ? 
                0.19513312f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <68.80937f ? 
                     (data[298 /* Time_Days */] <3.949875f ? 
                        0.09464682f : 
                        -0.07091906f) : 
                    -0.3520727f))) : 
         (data[9 /* Aromatic_bond_count */] <90.0f ? 
            0.31792358f : 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.28225f ? 
                 (data[92 /* Mean_part_size */] <2.096997f ? 
                    0.15104221f : 
                     (Double.isNaN(data[159]) || data[159 /* pH_11_logd */] <0.45507812f ? 
                         (data[96 /* diss_pH */] <6.2109375f ? 
                            -0.04224947f : 
                            -0.15428986f) : 
                        0.09445921f)) : 
                0.21936072f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_59_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[92 /* Mean_part_size */] <0.556375f ? 
        -0.10810475f : 
         (data[298 /* Time_Days */] <11.90264f ? 
             (Double.isNaN(data[86]) || data[86 /* La_to_Gly */] <2.0f ? 
                 (data[92 /* Mean_part_size */] <25.315468f ? 
                     (Double.isNaN(data[21]) || data[21 /* Fused_aromatic_ring_count */] <5.0f ? 
                        -0.17551875f : 
                        -0.09884269f) : 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <73.918755f ? 
                        0.36871177f : 
                        -0.101575784f)) : 
                -0.46759436f) : 
             (data[82 /* pI */] <4.8991213f ? 
                0.50186247f : 
                 (data[99 /* Prod_method */] <1.5f ? 
                    -0.14576405f : 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <49.41725f ? 
                         (data[85 /* PLGA_Mw */] <55000.5f ? 
                            0.1359036f : 
                             (Double.isNaN(data[113]) || data[113 /* Smallest_ring_size */] <3.0f ? 
                                0.015728313f : 
                                -0.051026862f)) : 
                        0.18761829f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_60_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (data[91 /* Encaps_rate */] <69.85625f ? 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <56.085434f ? 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <39.01421f ? 
                     (data[26 /* Hyper_wiener_index */] <-3.29643104E8f ? 
                        0.20470035f : 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <20.095062f ? 
                            -0.21685039f : 
                            0.037742894f)) : 
                    0.21669273f) : 
                0.29593405f) : 
             (data[91 /* Encaps_rate */] <76.39132f ? 
                -0.29137585f : 
                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <60696.0f ? 
                     (Double.isNaN(data[96]) || data[96 /* diss_pH */] <7.425f ? 
                         (data[83 /* Quaternary_structure */] <1.5f ? 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <16.8688f ? 
                                -0.20587754f : 
                                0.049160104f) : 
                             (Double.isNaN(data[157]) || data[157 /* pH_9_logd */] <0.2125f ? 
                                0.07073458f : 
                                0.036439024f)) : 
                        -0.19983621f) : 
                    0.22579701f))) : 
        0.21479633f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_61_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.5786006f ? 
        -0.4153479f : 
         (Double.isNaN(data[82]) || data[82 /* pI */] <5.313525f ? 
             (data[85 /* PLGA_Mw */] <13953.0f ? 
                0.38145202f : 
                 (Double.isNaN(data[21]) || data[21 /* Fused_aromatic_ring_count */] <5.0f ? 
                     (data[90 /* Inner_phase_volume */] <2.7851562f ? 
                        0.3734285f : 
                         (Double.isNaN(data[96]) || data[96 /* diss_pH */] <7.4484377f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <54.4053f ? 
                                0.013786552f : 
                                -0.20593555f) : 
                             (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <55977.0f ? 
                                0.20409477f : 
                                -0.025108559f))) : 
                     (data[298 /* Time_Days */] <19.803734f ? 
                        -0.39312854f : 
                        0.067429684f))) : 
             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <30.95271f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <6.2078123f ? 
                    -0.3219652f : 
                    -0.024816707f) : 
                0.101868466f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_62_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.10803f ? 
         (Double.isNaN(data[97]) || data[97 /* diss_add */] <1.5f ? 
             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.6984727f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.382f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <32.661564f ? 
                         (data[22 /* Fused_ring_count */] <3.0f ? 
                            -0.35604322f : 
                             (data[91 /* Encaps_rate */] <29.7f ? 
                                -0.2916203f : 
                                 (data[85 /* PLGA_Mw */] <29313.0f ? 
                                    -0.17373222f : 
                                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <20.75515f ? 
                                         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <0.5f ? 
                                             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <82.745f ? 
                                                0.30393565f : 
                                                0.06985436f) : 
                                            0.04505917f) : 
                                        -0.065665945f)))) : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <6.940125f ? 
                            0.26082683f : 
                            -0.12461635f)) : 
                    -0.24435756f) : 
                0.12321217f) : 
            0.2602379f) : 
        0.31768727f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_63_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <0.082657225f ? 
        -0.23582822f : 
         (data[91 /* Encaps_rate */] <28.532812f ? 
            0.17275657f : 
             (data[162 /* pH_14_logd */] <-4.941641f ? 
                0.20343094f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <76.769875f ? 
                     (data[99 /* Prod_method */] <1.5f ? 
                         (data[298 /* Time_Days */] <18.587093f ? 
                             (data[85 /* PLGA_Mw */] <39700.5f ? 
                                -0.24289742f : 
                                -0.38869864f) : 
                             (Double.isNaN(data[82]) || data[82 /* pI */] <5.05075f ? 
                                0.14872614f : 
                                -0.13416484f)) : 
                         (Double.isNaN(data[86]) || data[86 /* La_to_Gly */] <2.0f ? 
                             (data[94 /* PLGA_conc */] <15.51605f ? 
                                0.16805638f : 
                                 (data[298 /* Time_Days */] <25.4567f ? 
                                    0.13786031f : 
                                    -0.037286937f)) : 
                            -0.09291387f)) : 
                    -0.3221295f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_64_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.40008f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <64.563446f ? 
                 (data[40 /* Ring_bond_count */] <138.0f ? 
                    -0.17087048f : 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <6.3045f ? 
                         (data[92 /* Mean_part_size */] <0.52251565f ? 
                            -0.14301646f : 
                             (data[92 /* Mean_part_size */] <3.8806288f ? 
                                0.15697652f : 
                                 (Double.isNaN(data[80]) || data[80 /* Largest_ring_size.2 */] <44.0f ? 
                                    -0.10237329f : 
                                    -0.05264729f))) : 
                         (data[88 /* PVA_conc_outer_phase */] <0.3125f ? 
                            -0.064652875f : 
                             (data[165 /* bpKa2 */] <-1.408f ? 
                                0.19380416f : 
                                 (data[94 /* PLGA_conc */] <11.85f ? 
                                    -0.013309645f : 
                                    0.020955307f))))) : 
                0.23188949f) : 
            -0.24184684f) : 
        0.23783529f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_65_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (data[15 /* Chain_atom_count */] <626.5f ? 
            0.2660068f : 
             (data[84 /* PLGA_visc */] <0.22509766f ? 
                0.14603838f : 
                 (data[82 /* pI */] <4.7464843f ? 
                     (data[26 /* Hyper_wiener_index */] <5.737753E8f ? 
                        -0.22314197f : 
                        -0.13101028f) : 
                     (Double.isNaN(data[136]) || data[136 /* Maximal_projection_radius.1 */] <29.962969f ? 
                         (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.6875f ? 
                             (Double.isNaN(data[103]) || data[103 /* Aliphatic_bond_count.3 */] <58.0f ? 
                                0.034250397f : 
                                -0.050797697f) : 
                            -0.086583294f) : 
                        0.061973825f)))) : 
        0.10562366f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_66_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.035f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.2265625f ? 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.5123596f ? 
                     (Double.isNaN(data[193]) || data[193 /* pH_10_msdon */] <1.5f ? 
                         (data[84 /* PLGA_visc */] <0.3771875f ? 
                            -0.15163949f : 
                             (data[91 /* Encaps_rate */] <70.4f ? 
                                 (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.5715f ? 
                                    0.11320505f : 
                                    0.029107938f) : 
                                 (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.601875f ? 
                                     (data[84 /* PLGA_visc */] <0.48796874f ? 
                                        0.0054266565f : 
                                        -0.20523493f) : 
                                    0.04902454f))) : 
                        -0.12593344f) : 
                    0.18412164f) : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <44.14436f ? 
                    -0.0835315f : 
                    -0.32327425f)) : 
            0.14346194f) : 
        0.16984668f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_67_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (data[298 /* Time_Days */] <0.5786006f ? 
            -0.27285627f : 
             (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <0.80078125f ? 
                 (data[91 /* Encaps_rate */] <69.890625f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <27.007875f ? 
                         (data[26 /* Hyper_wiener_index */] <-2.4161034E7f ? 
                            -0.13948183f : 
                            0.34079403f) : 
                        0.3825804f) : 
                     (data[13 /* Carboaromatic_ring_count */] <33.5f ? 
                         (data[298 /* Time_Days */] <24.388187f ? 
                            -0.25513342f : 
                            -0.12413604f) : 
                         (data[91 /* Encaps_rate */] <81.18164f ? 
                            -0.089058846f : 
                            0.16457386f))) : 
                 (data[298 /* Time_Days */] <8.015141f ? 
                    -0.24783689f : 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <65.40625f ? 
                         (data[298 /* Time_Days */] <31.16524f ? 
                            -0.1376063f : 
                            -0.06542228f) : 
                        0.108010925f)))) : 
        0.24297957f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_68_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.10803f ? 
         (data[298 /* Time_Days */] <1.1349224f ? 
             (data[89 /* PVA_Mw */] <30429.5f ? 
                0.028683601f : 
                -0.23998536f) : 
             (data[91 /* Encaps_rate */] <28.45f ? 
                0.2335507f : 
                 (data[153 /* pH_5_logd */] <-3.3048828f ? 
                    0.28682822f : 
                     (data[18 /* Balaban_index */] <1386.0527f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <33.15856f ? 
                            0.015496422f : 
                            0.09827747f) : 
                         (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <35157.0f ? 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <38.13985f ? 
                                 (Double.isNaN(data[121]) || data[121 /* ASA */] <955.216f ? 
                                    -0.3179989f : 
                                    -0.09330575f) : 
                                -0.017973593f) : 
                             (Double.isNaN(data[14]) || data[14 /* Carbo_ring_count */] <31.0f ? 
                                -0.10892214f : 
                                0.1303411f)))))) : 
        0.1905121f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_69_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.40008f ? 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <4.1015625f ? 
                 (data[84 /* PLGA_visc */] <0.27401564f ? 
                    -0.16719067f : 
                     (data[152 /* pH_4_logd */] <-3.3850782f ? 
                        -0.11724042f : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <59.124218f ? 
                             (Double.isNaN(data[26]) || data[26 /* Hyper_wiener_index */] <6.8828019E8f ? 
                                 (data[90 /* Inner_phase_volume */] <1.5f ? 
                                     (data[65 /* Aromatic_atom_count.2 */] <219.0f ? 
                                        -0.0028427748f : 
                                        -0.019665647f) : 
                                     (Double.isNaN(data[145]) || data[145 /* Stereoisomer_count */] <0.5f ? 
                                        0.09587026f : 
                                        0.051482566f)) : 
                                -0.035868518f) : 
                            0.14530946f))) : 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <73.734375f ? 
                    0.3087452f : 
                    0.022910187f)) : 
            -0.13776581f) : 
        0.22044638f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_70_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (data[21 /* Fused_aromatic_ring_count */] <3.0f ? 
            0.12177326f : 
             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.2265625f ? 
                 (Double.isNaN(data[136]) || data[136 /* Maximal_projection_radius.1 */] <13.316875f ? 
                     (data[84 /* PLGA_visc */] <0.34048438f ? 
                        0.12771137f : 
                         (data[94 /* PLGA_conc */] <8.176812f ? 
                            0.052516706f : 
                             (data[19 /* Dreiding_energy */] <620268.56f ? 
                                -0.14091128f : 
                                 (Double.isNaN(data[120]) || data[120 /* a_yy_.1 */] <82.65725f ? 
                                     (data[89 /* PVA_Mw */] <24250.5f ? 
                                        0.014017774f : 
                                        -0.064631015f) : 
                                    -0.07617981f)))) : 
                    0.23139188f) : 
                 (Double.isNaN(data[23]) || data[23 /* Heteroaliphatic_ring_count */] <17.5f ? 
                    -0.050510455f : 
                    -0.20484327f))) : 
        0.06162797f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_71_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.04501465f ? 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.02537f ? 
             (data[298 /* Time_Days */] <0.566654f ? 
                -0.23957555f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <99.064f ? 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.90625f ? 
                         (Double.isNaN(data[99]) || data[99 /* Prod_method */] <3.5f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <37.33875f ? 
                                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <37.965f ? 
                                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <5.818625f ? 
                                         (Double.isNaN(data[99]) || data[99 /* Prod_method */] <1.5f ? 
                                            -0.004631981f : 
                                            -0.2081238f) : 
                                        0.12384036f) : 
                                    0.20332894f) : 
                                -0.14070924f) : 
                            -0.29210487f) : 
                         (data[131 /* Dreiding_energy.1 */] <765.91626f ? 
                            0.45551458f : 
                            0.003163992f)) : 
                    -0.24974144f)) : 
            0.2600056f) : 
        0.13273506f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_72_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <7.025864f ? 
         (Double.isNaN(data[134]) || data[134 /* Hyper_wiener_index.1 */] <241765.5f ? 
             (data[13 /* Carboaromatic_ring_count */] <15.5f ? 
                -0.40482262f : 
                 (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <76.48125f ? 
                    -0.1495175f : 
                    0.035444535f)) : 
            0.083483234f) : 
         (data[91 /* Encaps_rate */] <28.532812f ? 
            0.28477737f : 
             (data[91 /* Encaps_rate */] <49.33088f ? 
                -0.18246453f : 
                 (Double.isNaN(data[86]) || data[86 /* La_to_Gly */] <2.0f ? 
                     (Double.isNaN(data[21]) || data[21 /* Fused_aromatic_ring_count */] <5.0f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <73.55484f ? 
                             (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <40900.5f ? 
                                0.053242486f : 
                                0.28639993f) : 
                            -0.09491358f) : 
                         (Double.isNaN(data[34]) || data[34 /* Length_perpendicular_to_the_min_area */] <50.944687f ? 
                            -0.016778262f : 
                            -0.2324129f)) : 
                    0.21983118f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_73_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.10803f ? 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <4.1015625f ? 
             (data[84 /* PLGA_visc */] <0.22466016f ? 
                0.16271617f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <77.0265f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <39.91969f ? 
                         (data[22 /* Fused_ring_count */] <3.0f ? 
                            -0.36366802f : 
                             (data[91 /* Encaps_rate */] <29.7f ? 
                                -0.22400825f : 
                                 (data[298 /* Time_Days */] <3.9855f ? 
                                    0.1484012f : 
                                     (data[88 /* PVA_conc_outer_phase */] <0.5f ? 
                                        -0.15480497f : 
                                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <57.819126f ? 
                                             (data[85 /* PLGA_Mw */] <54025.5f ? 
                                                -0.08757216f : 
                                                0.054577198f) : 
                                            0.11631967f))))) : 
                        0.13128367f) : 
                    -0.30900306f)) : 
             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.46156642f ? 
                0.0027693436f : 
                0.17055166f)) : 
        0.10864216f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_74_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (data[298 /* Time_Days */] <0.5786006f ? 
            -0.21710007f : 
             (data[9 /* Aromatic_bond_count */] <64.5f ? 
                0.16266465f : 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.03125f ? 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.5268555f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <55.632156f ? 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <53.564f ? 
                                 (Double.isNaN(data[122]) || data[122 /* ASA+ */] <1829.4413f ? 
                                     (data[298 /* Time_Days */] <8.8465f ? 
                                        0.17580292f : 
                                         (data[91 /* Encaps_rate */] <63.71f ? 
                                            0.1275672f : 
                                            -0.059882805f)) : 
                                    -0.12920496f) : 
                                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <16.8679f ? 
                                    -0.2515075f : 
                                    -0.0733103f)) : 
                            0.1615429f) : 
                        0.29067078f) : 
                     (data[95 /* PLGA_to_Placticizer */] <74.57886f ? 
                        -0.23706445f : 
                        -0.03898123f)))) : 
        0.10708497f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_75_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.40008f ? 
             (data[298 /* Time_Days */] <0.6612578f ? 
                -0.23022594f : 
                 (Double.isNaN(data[97]) || data[97 /* diss_add */] <0.5f ? 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <38.79975f ? 
                         (data[92 /* Mean_part_size */] <6.940125f ? 
                             (data[26 /* Hyper_wiener_index */] <2.55404512E8f ? 
                                -0.25022548f : 
                                 (data[92 /* Mean_part_size */] <3.834f ? 
                                    0.041727304f : 
                                    -0.10261707f)) : 
                             (data[99 /* Prod_method */] <1.5f ? 
                                -0.1210929f : 
                                 (data[298 /* Time_Days */] <8.3474f ? 
                                    0.3602108f : 
                                    0.04503866f))) : 
                         (data[84 /* PLGA_visc */] <0.58425f ? 
                            0.1645159f : 
                            0.017379444f)) : 
                    0.20727296f)) : 
            -0.15644602f) : 
        0.18342581f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_76_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.28225f ? 
         (data[48 /* Bond_count.1 */] <821.5f ? 
            0.105941586f : 
             (data[84 /* PLGA_visc */] <0.2754258f ? 
                -0.16904657f : 
                 (data[152 /* pH_4_logd */] <-3.3048828f ? 
                     (data[298 /* Time_Days */] <9.257609f ? 
                        -0.051315125f : 
                        -0.1376555f) : 
                     (Double.isNaN(data[298]) || data[298 /* Time_Days */] <35.70792f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <15.622215f ? 
                             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.571875f ? 
                                 (data[56 /* Heteroaliphatic_ring_count.1 */] <26.0f ? 
                                    -0.23800287f : 
                                    0.023800831f) : 
                                0.12677169f) : 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <24.26842f ? 
                                0.21439536f : 
                                0.04819428f)) : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <5.535625f ? 
                            0.070530355f : 
                            -0.17609324f))))) : 
         (data[85 /* PLGA_Mw */] <55719.5f ? 
            0.27769494f : 
            -0.037538234f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_77_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.28225f ? 
         (Double.isNaN(data[22]) || data[22 /* Fused_ring_count */] <5.0f ? 
             (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <1.1230469f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <66.63122f ? 
                     (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <93.375f ? 
                         (data[79 /* Chain_bond_count.1 */] <880.0f ? 
                            0.22206387f : 
                             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <35.14099f ? 
                                0.04777382f : 
                                0.12800592f)) : 
                        -0.016723843f) : 
                    -0.06912937f) : 
                -0.070483066f) : 
             (data[92 /* Mean_part_size */] <0.6609766f ? 
                -0.19911996f : 
                 (Double.isNaN(data[126]) || data[126 /* Polar_surface_area */] <700.1503f ? 
                     (data[84 /* PLGA_visc */] <0.34910157f ? 
                        -0.10839575f : 
                         (data[85 /* PLGA_Mw */] <52969.5f ? 
                            0.13851541f : 
                            0.023397844f)) : 
                    -0.13589422f))) : 
         (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <77.060936f ? 
            -0.18754077f : 
            0.31896687f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_78_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (data[91 /* Encaps_rate */] <69.85625f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <23.255f ? 
                 (data[91 /* Encaps_rate */] <26.548437f ? 
                    -0.15952449f : 
                     (data[19 /* Dreiding_energy */] <602673.2f ? 
                        0.02756007f : 
                        0.0071911337f)) : 
                 (data[90 /* Inner_phase_volume */] <2.75f ? 
                    0.25226617f : 
                    0.019180099f)) : 
             (data[91 /* Encaps_rate */] <76.39132f ? 
                -0.2033944f : 
                 (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.5987812f ? 
                     (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.96875f ? 
                         (data[89 /* PVA_Mw */] <35062.5f ? 
                            0.017001795f : 
                             (data[84 /* PLGA_visc */] <0.369875f ? 
                                -0.14031783f : 
                                -0.061468553f)) : 
                        -0.16771322f) : 
                    0.089533545f))) : 
        0.12534355f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_79_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <105.2345f ? 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <24.21875f ? 
             (data[34 /* Length_perpendicular_to_the_min_area */] <55.134647f ? 
                 (data[91 /* Encaps_rate */] <46.3375f ? 
                    -0.14725548f : 
                     (data[83 /* Quaternary_structure */] <1.5f ? 
                        -0.04129189f : 
                        0.0021657064f)) : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <74.09276f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <64.296936f ? 
                         (data[91 /* Encaps_rate */] <43.073437f ? 
                            0.062598534f : 
                             (data[58 /* Ring_atom_count.1 */] <325.5f ? 
                                -0.13465394f : 
                                 (data[83 /* Quaternary_structure */] <1.5f ? 
                                    0.04817363f : 
                                    -0.048011214f))) : 
                        0.20490284f) : 
                    -0.11384401f)) : 
            0.08183661f) : 
        0.007918373f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_80_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.28225f ? 
         (data[84 /* PLGA_visc */] <0.2747207f ? 
             (data[87 /* PVA_conc_inner_phase */] <0.5029297f ? 
                -0.04917621f : 
                -0.14402051f) : 
             (data[24 /* Heteroaromatic_ring_count */] <5.0f ? 
                0.18432446f : 
                 (Double.isNaN(data[148]) || data[148 /* pH_0_logd */] <0.57847655f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <66.63122f ? 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <38.66292f ? 
                             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <83.35f ? 
                                 (data[91 /* Encaps_rate */] <28.8675f ? 
                                    0.03534692f : 
                                     (data[92 /* Mean_part_size */] <2.1735f ? 
                                        -0.17131183f : 
                                        -0.057248745f)) : 
                                0.012732876f) : 
                            0.06943923f) : 
                        -0.10705171f) : 
                    0.05075163f))) : 
         (data[85 /* PLGA_Mw */] <55719.5f ? 
            0.23850419f : 
            -0.07985531f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_81_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[82]) || data[82 /* pI */] <5.3171144f ? 
         (data[298 /* Time_Days */] <0.16531445f ? 
            -0.15876979f : 
             (data[30 /* Maximal_projection_radius */] <30.620996f ? 
                0.28840026f : 
                 (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <12.759976f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.696686f ? 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <45.083656f ? 
                             (data[3 /* O_no */] <728.5f ? 
                                0.019617902f : 
                                 (data[94 /* PLGA_conc */] <8.1017f ? 
                                    0.04331603f : 
                                    0.19597173f)) : 
                            -0.11438907f) : 
                        0.16802342f) : 
                     (data[298 /* Time_Days */] <14.756359f ? 
                        -0.24009115f : 
                        0.05561533f)))) : 
         (Double.isNaN(data[187]) || data[187 /* pH_4_msdon */] <1.5f ? 
             (data[78 /* Chain_atom_count.2 */] <1244.0f ? 
                -0.08609439f : 
                0.01491311f) : 
            -0.107778035f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_82_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.04501465f ? 
         (data[85 /* PLGA_Mw */] <13953.0f ? 
            0.13681789f : 
             (data[65 /* Aromatic_atom_count.2 */] <128.5f ? 
                 (Double.isNaN(data[42]) || data[42 /* Ring_count_of_atom */] <1.5f ? 
                    -0.26040813f : 
                    -0.06477571f) : 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <5.46875f ? 
                     (Double.isNaN(data[96]) || data[96 /* diss_pH */] <7.425f ? 
                         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <2.1490624f ? 
                             (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <0.5372656f ? 
                                 (Double.isNaN(data[46]) || data[46 /* Aliphatic_atom_count.1 */] <3484.5f ? 
                                    0.02117845f : 
                                    -0.047445625f) : 
                                0.0693225f) : 
                            -0.059308514f) : 
                         (data[85 /* PLGA_Mw */] <48313.0f ? 
                            0.08494364f : 
                            0.25371328f)) : 
                    -0.16956298f))) : 
        0.11578775f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_83_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[58 /* Ring_atom_count.1 */] <137.0f ? 
        -0.047531445f : 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <58.02537f ? 
             (data[85 /* PLGA_Mw */] <13953.0f ? 
                0.23338272f : 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.90625f ? 
                     (data[85 /* PLGA_Mw */] <36500.0f ? 
                        -0.2344927f : 
                         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <61484.5f ? 
                             (data[298 /* Time_Days */] <2.89855f ? 
                                0.086349264f : 
                                 (Double.isNaN(data[18]) || data[18 /* Balaban_index */] <5366.817f ? 
                                     (data[85 /* PLGA_Mw */] <47900.5f ? 
                                        -0.12625735f : 
                                         (data[136 /* Maximal_projection_radius.1 */] <5.70325f ? 
                                            0.070020646f : 
                                            -0.029683923f)) : 
                                    0.054865424f)) : 
                            -0.14385767f)) : 
                    0.17070268f)) : 
            0.17830235f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_84_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.69741505f ? 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <101.26775f ? 
             (data[91 /* Encaps_rate */] <26.628124f ? 
                -0.16077836f : 
                 (data[155 /* pH_7_logd */] <-1.0003906f ? 
                    0.09310046f : 
                     (data[91 /* Encaps_rate */] <69.89766f ? 
                         (data[89 /* PVA_Mw */] <24219.5f ? 
                            -0.048227854f : 
                             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <45.0225f ? 
                                -0.0028803174f : 
                                0.10267186f)) : 
                         (data[84 /* PLGA_visc */] <0.27265626f ? 
                            -0.08916506f : 
                             (data[91 /* Encaps_rate */] <83.94f ? 
                                -0.08263007f : 
                                 (data[4 /* S_no */] <10.5f ? 
                                    0.061941486f : 
                                     (data[137 /* Minimal_projection_area.1 */] <90.681f ? 
                                        -0.0031369904f : 
                                        -0.018740723f))))))) : 
            -0.32505497f) : 
        0.08026904f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_85_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <7.025864f ? 
         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <60704.0f ? 
             (Double.isNaN(data[32]) || data[32 /* Minimal_projection_area */] <2979.9023f ? 
                 (Double.isNaN(data[35]) || data[35 /* Platt_index */] <5572.0f ? 
                    -2.0639154E-5f : 
                    -0.21656884f) : 
                0.25534067f) : 
            -0.28859213f) : 
         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <64.465126f ? 
             (data[22 /* Fused_ring_count */] <3.0f ? 
                0.15120569f : 
                 (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <4.296875f ? 
                     (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <7.29925f ? 
                         (data[91 /* Encaps_rate */] <28.25f ? 
                            0.09857182f : 
                             (data[92 /* Mean_part_size */] <1.98375f ? 
                                -0.12057182f : 
                                -0.025060935f)) : 
                         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <28.735062f ? 
                            -0.029962061f : 
                            -0.20056759f)) : 
                    0.068368174f)) : 
             (Double.isNaN(data[115]) || data[115 /* Mass.1 */] <2209.2336f ? 
                0.30859804f : 
                -0.018107548f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_86_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[119]) || data[119 /* a_zz_ */] <646.4758f ? 
         (data[21 /* Fused_aromatic_ring_count */] <3.0f ? 
            0.090897955f : 
             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <76.31563f ? 
                 (data[91 /* Encaps_rate */] <28.569044f ? 
                    0.04228208f : 
                     (Double.isNaN(data[88]) || data[88 /* PVA_conc_outer_phase */] <1.5125f ? 
                        -0.18589398f : 
                        0.0011747817f)) : 
                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <48156.5f ? 
                     (data[24 /* Heteroaromatic_ring_count */] <5.5f ? 
                        -0.0052338014f : 
                         (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <42195.0f ? 
                            -0.067202404f : 
                            -0.08882181f)) : 
                     (data[85 /* PLGA_Mw */] <60492.0f ? 
                        0.11445503f : 
                        0.12763035f)))) : 
         (data[91 /* Encaps_rate */] <72.50625f ? 
            -0.028988937f : 
            -0.20682167f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_87_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <7.025864f ? 
         (Double.isNaN(data[298]) || data[298 /* Time_Days */] <4.3911653f ? 
             (Double.isNaN(data[84]) || data[84 /* PLGA_visc */] <0.6533477f ? 
                 (data[298 /* Time_Days */] <0.58320165f ? 
                    -0.12675871f : 
                    0.1264395f) : 
                -0.15017761f) : 
            -0.21324022f) : 
         (data[47 /* Aromatic_atom_count.1 */] <85.0f ? 
            0.1705985f : 
             (data[298 /* Time_Days */] <9.606928f ? 
                0.15458943f : 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.723f ? 
                     (Double.isNaN(data[18]) || data[18 /* Balaban_index */] <5395.9805f ? 
                         (Double.isNaN(data[162]) || data[162 /* pH_14_logd */] <0.1525f ? 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <35.9807f ? 
                                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <24.1075f ? 
                                    -0.107552305f : 
                                    -0.0044009523f) : 
                                -0.18925534f) : 
                            0.05280488f) : 
                        0.06650039f) : 
                    0.1189902f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_88_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[298 /* Time_Days */] <11.90264f ? 
         (Double.isNaN(data[90]) || data[90 /* Inner_phase_volume */] <2.7470703f ? 
             (data[57 /* Heteroaromatic_ring_count.1 */] <3.5f ? 
                -0.34890872f : 
                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <4.4565f ? 
                    0.02878325f : 
                    -0.18763302f)) : 
             (data[85 /* PLGA_Mw */] <55719.5f ? 
                0.26713338f : 
                -0.034268714f)) : 
         (data[68 /* Aromatic_bond_count.2 */] <90.0f ? 
            0.23400742f : 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <86.28225f ? 
                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <54.083904f ? 
                     (Double.isNaN(data[162]) || data[162 /* pH_14_logd */] <0.39507812f ? 
                         (data[92 /* Mean_part_size */] <2.0546875f ? 
                            0.025675781f : 
                             (data[85 /* PLGA_Mw */] <54000.5f ? 
                                -0.15770721f : 
                                -0.02833666f)) : 
                        0.052098107f) : 
                    -0.1800576f) : 
                0.101373896f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_89_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[91 /* Encaps_rate */] <28.532812f ? 
        0.06410414f : 
         (data[91 /* Encaps_rate */] <46.050648f ? 
             (Double.isNaN(data[57]) || data[57 /* Heteroaromatic_ring_count.1 */] <14.5f ? 
                -0.16074525f : 
                -0.051498782f) : 
             (data[84 /* PLGA_visc */] <0.27538085f ? 
                -0.076508686f : 
                 (Double.isNaN(data[85]) || data[85 /* PLGA_Mw */] <55031.5f ? 
                     (data[8 /* Aromatic_atom_count */] <80.5f ? 
                        0.15923822f : 
                         (data[30 /* Maximal_projection_radius */] <44.1575f ? 
                            0.004292128f : 
                             (Double.isNaN(data[91]) || data[91 /* Encaps_rate */] <79.3875f ? 
                                0.13178757f : 
                                0.028778307f))) : 
                     (data[91 /* Encaps_rate */] <78.88281f ? 
                        -0.13457088f : 
                         (Double.isNaN(data[14]) || data[14 /* Carbo_ring_count */] <27.0f ? 
                            -0.003296516f : 
                            0.16158323f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_90_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* Minimal_projection_radius */] <18.457813f ? 
        -0.12599862f : 
         (data[85 /* PLGA_Mw */] <13953.0f ? 
            0.25805962f : 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <100.38625f ? 
                 (data[298 /* Time_Days */] <0.6612578f ? 
                    -0.17966013f : 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <3.90625f ? 
                         (Double.isNaN(data[87]) || data[87 /* PVA_conc_inner_phase */] <0.5078125f ? 
                             (data[298 /* Time_Days */] <17.577f ? 
                                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <53.564f ? 
                                    -0.03090275f : 
                                    -0.2290328f) : 
                                 (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <57.99475f ? 
                                     (Double.isNaN(data[165]) || data[165 /* bpKa2 */] <-2.816f ? 
                                        0.064834565f : 
                                        -0.09623047f) : 
                                    0.16022497f)) : 
                             (Double.isNaN(data[298]) || data[298 /* Time_Days */] <30.1515f ? 
                                 (Double.isNaN(data[298]) || data[298 /* Time_Days */] <11.117226f ? 
                                    0.11736042f : 
                                    -0.076742455f) : 
                                0.16240178f)) : 
                        0.2288433f)) : 
                -0.2218483f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class GBM_grid_1_AutoML_20191030_224221_model_62_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += GBM_grid_1_AutoML_20191030_224221_model_62_Tree_91_class_0.score0(fdata);
  }
}
class GBM_grid_1_AutoML_20191030_224221_model_62_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[98]) || data[98 /* diss_add_conc */] <0.04501465f ? 
         (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <7.3242188f ? 
             (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <93.775f ? 
                 (data[89 /* PVA_Mw */] <11322.5f ? 
                     (Double.isNaN(data[95]) || data[95 /* PLGA_to_Placticizer */] <1.0253906f ? 
                        0.013317574f : 
                        0.09554301f) : 
                     (data[4 /* S_no */] <11.5f ? 
                        -0.10661381f : 
                         (Double.isNaN(data[92]) || data[92 /* Mean_part_size */] <66.8415f ? 
                             (Double.isNaN(data[110]) || data[110 /* Ring_bond_count.3 */] <28.5f ? 
                                 (Double.isNaN(data[94]) || data[94 /* PLGA_conc */] <11.1f ? 
                                     (Double.isNaN(data[89]) || data[89 /* PVA_Mw */] <34500.5f ? 
                                        0.008335399f : 
                                        -0.017247565f) : 
                                    0.086839624f) : 
                                -0.061320376f) : 
                            -0.12267055f))) : 
                0.21631423f) : 
             (Double.isNaN(data[83]) || data[83 /* Quaternary_structure */] <1.5f ? 
                -0.04248562f : 
                -0.21409006f)) : 
        0.10799899f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


